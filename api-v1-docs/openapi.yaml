openapi: 3.0.0
servers:
  - url: https://dash.adam-rms.com/api/
    description: Production
info:
  description: |
    AdamRMS is a free, open source advanced Rental Management System for Theatre, AV & Broadcast.
    This is the API listing for the v1 API, which is currently in Production and active development.
    You can find out more about AdamRMS at [https://adam-rms.com](https://adam-rms.com).
  version: 1.0.0
  title: AdamRMS API
  termsOfService: https://adam-rms.com/legal
  contact:
    name: AdamRMS Support
    email: support@adam-rms.com
    url: https://github.com/adam-rms
  x-logo:
    url: https://cdn.adam-rms.com/img/logo.png
    altText: AdamRMS Logo
  license:
    name: GNU Affero General Public License v3.0
    url: https://github.com/adam-rms/adam-rms/blob/main/LICENSE
externalDocs:
  description: AdamRMS Documentation
  url: https://adam-rms.com
tags:
  - name: authentication
    x-displayName: Authentication
    description: Login
  - name: account
    x-displayName: Account
    description: User account management
  - name: permissions
    x-displayName: Permissions
    description: Instance and global prmission management
  - name: assets
    x-displayName: Assets
    description: Asset management
  - name: groups
    x-displayName: Groups
    description: Asset Groups
  - name: maintenance
    x-displayName: Maintenance
    description: Asset Maintenance
  - name: maintenanceJobs
    x-displayName: Maintenance Jobs
    description: Asset Maintenance Jobs
  - name: manufacturers
    x-displayName: Manufacturers
    description: Asset Manufacturers
  - name: barcodes
    x-displayName: Barcodes
    description: Asset Barcodes
  - name: categories
    x-displayName: Categories
    description: Asset Categories
  - name: projects
    x-displayName: Projects
    description: Project Management
  - name: crew
    x-displayName: Crew
    description: Project Crew Management
  - name: recruitment
    x-displayName: Recruitment
    description: Project Crew Recruitment
  - name: project_assets
    x-displayName: Project Assets
    description: Project Asset Management
  - name: instances
    x-displayName: Instances
    description: Instance Management
  - name: locations
    x-displayName: Locations
    description: Business Locations
  - name: clients
    x-displayName: Clients
    description: Client Management
  - name: training
    x-displayName: Training
  - name: modules
    x-displayName: Training Modules
  - name: module_steps
    x-displayName: Module Steps
  - name: cms
    x-displayName: CMS Pages
    description: CMS Page Management
  - name: file_uploads
    x-displayName: File Uploads
    description: Handles interaction with s3 Buckets
  - name: notifications
    x-displayName: Notifications
    description: |
      v1 notification endpoints   
      These endpoints are not accessible from the web, and are instead used internally.
  - name: assetAssignmentStatus
    x-displayName: Asset Assignment Statuses
  - name: projectTypes
    x-displayName: Project Types
  - name: signupCodes
    x-displayName: Signup Codes
x-tagGroups:
  - name: Users
    tags:
      - authentication
      - account
      - permissions
  - name: Assets
    tags:
      - assets
      - barcodes
      - categories
      - groups
      - maintenance
      - maintenanceJobs
      - manufacturers
  - name: Projects
    tags:
      - projects
      - crew
      - recruitment
      - project_assets
  - name: Businesses
    tags:
      - instances
      - locations
      - clients
      - assetAssignmentStatus
      - projectTypes
      - signupCodes
  - name: Training
    tags:
      - training
      - modules
      - module_steps
  - name: CMS Pages
    tags:
      - cms
  - name: Files
    tags:
      - file_uploads
  - name: Notifications
    tags:
      - notifications
paths:
  /account/basicDetails.php:
    parameters:
      - name: formData
        in: formData
        required: true
        schema:
          type: object
          properties:
            users_userid:
              type: string
              description: The ID of the user
            users_email:
              type: string
              description: The email address of the user
            users_username:
              type: string
              description: The username of the user
            users_name1:
              type: string
              description: The first name of the user
            users_name2:
              type: string
              description: The last name of the user
            users_social_facebook:
              type: string
              description: The Facebook username of the user
            users_social_twitter:
              type: string
              description: The Twitter username of the user
            users_social_instagram:
              type: string
              description: The Instagram username of the user
            users_social_linkedin:
              type: string
              description: The LinkedIn username of the user
            users_social_snapchat:
              type: string
              description: The Snapchat username of the user
    post:
      tags:
        - account
      summary: Update User Details
      description: Update basic user details
      operationId: updateBasicDetails
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
                    description: An empty object
        404:
          description: Not Found
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
                example:
                  result: false
                  error:
                    {
                      code: "UPDATE-FAIL",
                      message: "Could not update account details",
                    }
  /account/calendar-export.php:
    parameters:
      - name: uid
        in: query
        required: true
        schema:
          type: string
          description: The ID of the user
      - name: key
        in: query
        required: true
        schema:
          type: string
          description: The calendar hash
    get:
      tags:
        - account
      summary: Calendar Export
      description: Get calendar information for integrating with web calendars
      operationId: getCalendarExport
      responses:
        200:
          description: OK
          content:
            text/calendar:
              schema:
                type: string
                description: The calendar export
        404:
          description: Error
  /account/changePass.php:
    parameters:
      - name: oldpass
        in: query
        required: true
        schema:
          type: string
          description: The current password
      - name: newpass
        in: query
        required: true
        schema:
          type: string
          description: The new password
    post:
      tags:
        - account
      summary: Change Password
      description: Change the password of the current user
      operationId: changePassword
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
                    description: An empty object
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
                example:
                  result: false
                  error: { message: "Current Password Incorrect" }
  /account/destroyTokens.php:
    parameters:
      - name: userid
        in: query
        required: true
        schema:
          type: string
          description: The ID of the user
    post:
      tags:
        - account
      summary: Destroy Tokens
      description: Destroy all tokens for a user
      operationId: destroyTokens
      response:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /account/disconnectOAuth.php:
    parameters:
      - name: provider
        in: query
        required: true
        schema:
          type: string
          description: The name of the OAuth provider
      - name: users_userid
        in: query
        required: true
        schema:
          type: string
          description: The ID of the user
    post:
      tags:
        - account
      summary: Disconnect OAuth
      description: Disconnect an OAuth provider
      operationId: disconnectOAuth
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  message:
                    type: null
                    description: an empty array
                example:
                  result: true
                  message: []
  /account/emailViewer.php:
    parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
          description: The id of the sent email
    get:
      tags:
        - account
      summary: Email Viewer
      description: |
        Get the HTML of an email  
        Requires RMS permission 6
      operationId: getEmailViewer
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                type: string
                description: The HTML of the email
        404:
          description: Not Found
  /account/forcePasswordChange.php:
    parameters:
      - name: pass
        in: query
        required: true
        schema:
          type: string
          description: The new password
      - name: users_userid
        in: body
        required: true
        schema:
          type: string
          description: The ID of the user
      - name: users_changepass
        in: body
        required: true
        schema:
          type: string
          description: "1"
    post:
      tags:
        - account
      summary: Force Password Change
      description: Force a user to change their password
      operationId: forcePasswordChange
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /account/linkOAuth.php:
    parameters:
      - name: google
        in: query
        required: true
        schema:
          type: string
          description: use Google
    get:
      tags:
        - account
      summary: Link OAuth
      description: Link an OAuth provider
      operationId: linkOAuth
      responses:
        308:
          description: Redirect
          headers:
            Location:
              schema:
                type: string
                description: The URL to redirect to
  /account/notifications.php:
    parameters:
      - name: users_userid
        in: query
        required: true
        schema:
          type: string
          description: The ID of the user
      - name: settings
        in: query
        required: true
        schema:
          type: json
          description: The notification settings
    post:
      tags:
        - account
      summary: Notifications
      description: Set the notification settings for a user
      operationId: setNotifications
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  message:
                    type: null
                    description: an empty array
                example:
                  result: true
                  message: []
  /account/passwordReset.php:
    parameters:
      - name: code
        in: query
        required: true
        schema:
          type: string
          description: The password reset code
    post:
      tags:
        - account
      summary: Password Reset
      description: Act on a password reset code
      operationId: passwordReset
      responses:
        200:
          description: Error
          content:
            text/plain:
              schema:
                type: string
              examples:
                error:
                  value: "Sorry - Your code has expired - we've sent you another one instead"
                fail:
                  value: "Sorry - Your code has expired - please contact support"
        308:
          description: Success
          headers:
            Location:
              schema:
                type: string
                description: The URL to redirect to
  /account/permissions.php:
    parameters:
      - name: action
        in: query
        required: true
        schema:
          type: string
        description: DELETE, EDIT or new
      - name: users_userid
        in: query
        required: true
        schema:
          type: string
          description: The ID of the user
      - name: userPositions_id
        in: query
        required: true
        schema:
          type: string
          description: The ID of the user's position
    post:
      tags:
        - account
      summary: Permission Management
      description: |
        Manage user pemissions
        Requires RMS permission 13
      operationId: permissionManagement
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  message:
                    type: null
                    description: an empty array
                  error:
                    type: object
                    description: An object containing an error code and a message
              examples:
                Success:
                  value:
                    result: true
                    message: []
                EditError:
                  value:
                    result: false
                    error: { code: null, message: "Edit error" }
                AttributeError:
                  value:
                    result: false
                    error: { code: null, message: "Attribute action error" }
                DeleteError:
                  value:
                    result: false
                    error: { code: null, message: "Delete error" }
  /account/suspend.php:
    parameters:
      - name: userid
        in: query
        required: true
        schema:
          type: string
          description: The ID of the user
      - name: suspendval
        in: query
        required: true
        schema:
          type: string
          description: Reason for suspention
    post:
      tags:
        - account
      summary: Suspend
      description: Suspend a user
      operationId: suspend
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /account/theme.php:
    parameters:
      - name: dark
        in: query
        required: true
        schema:
          type: string
        examples: ["1", "0"]
    post:
      tags:
        - account
      summary: Theme
      description: Set the theme for the current user
      operationId: setTheme
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
  /account/thumbnail.php:
    parameters:
      - name: users_userid
        in: query
        required: true
        schema:
          type: string
          description: The ID of the user
      - name: thumbnail
        in: query
        required: true
        schema:
          type: string
          description: The thumbnail
    post:
      tags:
        - account
      summary: Thumbnail
      description: Set the thumbnail for a user
      operationId: setThumbnail
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
  /account/verifyEmail.php:
    parameters:
      - name: code
        in: query
        required: true
        schema:
          type: string
          description: The email verification code
    post:
      tags:
        - account
      summary: Verify Email
      description: Verify an email address
      operationId: verifyEmail
      responses:
        200:
          description: Error
          content:
            text/plain:
              schema:
                type: string
              examples:
                error:
                  value: "Sorry - Your code has expired - we've sent you another one instead"
                fail:
                  value: "Sorry - Your code has expired - please contact support"
        308:
          description: Success
          headers:
            Location:
              schema:
                type: string
                description: The URL to redirect to
  /account/viewSiteAs.php:
    parameters:
      - name: users_userid
        in: query
        required: true
        schema:
          type: string
          description: The ID of the user
    post:
      tags:
        - account
      summary: View Site As
      description: |
        View the site as a given user  
        Requires RMS permission 10
      operationId: viewSiteAs
      responses:
        200:
          description: Error
          content:
            text/plain:
              schema:
                type: string
              examples:
                noPermission:
                  value: "Sorry - you can't access this page"
                noParam:
                  value: "No uid passed"
        308:
          description: Success
          headers:
            Location:
              schema:
                type: string
                description: The URL to redirect to
  /account/viewSiteAs_terminate.php:
    parameters:
      - name: viewSiteAs
        in: body
        required: true
        schema:
          type: string
    post:
      tags:
        - account
      summary: View Site As Terminate
      description: Terminate the view site as session
      operationId: viewSiteAsTerminate
      responses:
        404:
          description: Error
          content:
            text/plain:
              schema:
                type: string
        308:
          description: Success
          headers:
            Location:
              schema:
                type: string
                description: The URL to redirect to
    /account/widgetToggle.php:
      parameters:
        - name: widgetName
          in: query
          required: true
          schema:
            type: string
            description: The widget to toggle
      post:
        tags:
          - account
        summary: Widget Toggle
        description: Toggle a widget
        operationId: widgetToggle
        responses:
          200:
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    result:
                      type: boolean
                      description: Whether the request was successful
                    message:
                      type: null
                      description: an empty array
                  example:
                    result: true
                    message: []
          "default":
            description: Error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    result:
                      type: boolean
                      description: Whether the request was successful
                    error:
                      type: array
                      description: An Array containing an error code and a message
                  example:
                    result: false
                    error: { code: null, message: "Update error" }
  /assets/archive.php:
    parameters:
      - name: assets_id
        in: query
        description: The ID of the asset to archive
        required: true
        schema:
          type: integer
      - name: reason
        in: query
        description: The reason for archiving the asset
        required: false
        schema:
          type: string
      - name: date
        in: query
        description: The date the asset was archived, usually today
        required: false
        schema:
          type: string
          format: date
    post:
      tags:
        - assets
      summary: Archive an Asset
      description: |
        Archives an asset  
        Requires Instance Permission 97 (Archive Asset)
      operationId: archiveAsset
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  message:
                    type: null
                    description: an empty array
                example:
                  result: true
                  message: []
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
                example:
                  result: false
                  error:
                    { code: "ARCHIVE-FAIL", message: "Could not archive asset" }
  /assets/deepSearch.php:
    parameters:
      - name: projectid
        in: query
        description: a project_id to check if assets are available for
        required: false
        schema:
          type: integer
      - name: public
        in: query
        description: Determines what asset listing should be returns
        required: false
        schema:
          type: boolean
      - name: dates
        in: query
        description: Two dates to check availability between, separated with a -
        required: false
        schema:
          type: string
      - name: instance_id
        in: query
        description: the instance to search in
        required: true
        schema:
          type: integer
      - name: page
        in: query
        description: The page of results to return
        required: true
        schema:
          type: integer
      - name: page_limit
        in: query
        description: The number of results to return per page
        required: true
        schema:
          type: number
      - name: sort
        in: query
        description: How to sort the results
        required: true
        schema:
          type: string
      - name: category
        in: query
        description: The Asset Category to filter by
        required: false
        schema:
          type: string
      - name: keyword
        in: query
        description: A keyword to search for
        required: false
        schema:
          type: string
      - name: manufacturer
        in: query
        description: A manufacturer to filter by
        required: false
        schema:
          type: string
      - name: group
        in: query
        description: An Asset Group to filter by
        required: false
        schema:
          type: string
      - name: showlinked
        in: query
        description: Whether to include linked assets
        required: false
        schema:
          type: integer
      - name: showarchived
        in: query
        description: Whether to include archived assets
        required: false
        schema:
          type: integer
      - name: tags
        in: query
        description: Asset Tag(s) to search for
        required: false
        schema:
          type: string
      - name: html
        in: query
        description: Whether to return a HTML card listing or JSON data
        required: false
        schema:
          type: string
    post:
      tags:
        - assets
      summary: Search for Assets
      description: Performs a deep search for assets
      operationId: searchAssets
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: Array
                    description: Array of asset data
            application/html:
              schema:
                type: object
                description: HTML code for the asset listing
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
                    properties:
                      PUBLIC:
                        type: boolean
                      AUTH:
                        type: object
                      html:
                        type: html
                        description: HTML code for the asset listing
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
                example:
                  result: false
                  error: { message: "Error loading results" }
  /assets/delete.php:
    parameters:
      - name: assets_id
        in: query
        description: The ID of the asset to delete
        required: true
        schema:
          type: integer
    post:
      tags:
        - assets
      summary: Delete an Asset
      description: |
        Deletes an asset  
        Requires Instance Permission 19 (Delete Asset)
      operationId: deleteAsset
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  message:
                    type: null
                    description: an empty array
                example:
                  result: true
                  message: []
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
                example:
                  result: false
                  error:
                    { code: "DELETE-FAIL", message: "Could not delete asset" }
  /assets/editAsset.php:
    parameters:
      - name: formData
        in: query
        description: The data to update the asset with
        required: true
        schema:
          type: object
          properties:
            assets_id:
              type: integer
              description: The ID of the asset to update
            assets_value:
              type: number
              description: The value of the asset
            assets_dayRate:
              type: number
              description: The day rate of the asset
            assets_weekRate:
              type: number
              description: The week rate of the asset
            assets_tag:
              type: string
              description: The tag of the asset
            assets_mass:
              type: number
              description: The weight of the asset
            assets_linkedTo:
              type: integer
              description: The ID of the asset this asset is linked to
            assetTypes_id:
              type: integer
              description: The ID of the asset type
            assets_notes:
              type: string
            asset_definableFields_1:
              type: string
            asset_definableFields_2:
              type: string
            asset_definableFields_3:
              type: string
            asset_definableFields_4:
              type: string
            asset_definableFields_5:
              type: string
            asset_definableFields_6:
              type: string
            asset_definableFields_7:
              type: string
            asset_definableFields_8:
              type: string
            asset_definableFields_9:
              type: string
            asset_definableFields_10:
              type: string
    post:
      tags:
        - assets
      summary: Edit an Asset
      description: |
        Edits an asset's data  
        Requires Instance Permission 59 (Edit Asset)
      operationId: editAsset
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  message:
                    type: null
                    description: an empty array
                example:
                  result: true
                  message: []
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                UpdateFail:
                  value:
                    result: false
                    error:
                      { code: "UPDATE-FAIL", message: "Could not update asset" }
                ParamError:
                  value:
                    result: false
                    error:
                      { code: "PARAM-ERROR", message: "No data for action" }
  /assets/editAssetType.php:
    parameters:
      - name: formData
        in: query
        description: The data to update the asset type with
        required: true
        schema:
          type: object
          properties:
            assetTypes_id:
              type: integer
              description: The ID of the asset type to update
            assetTypes_name:
              type: string
              description: The name of the asset type
            assetCategories_id:
              type: integer
              description: The ID of the asset category
            assetTypes_productLink:
              type: string
              description: Link to the website of the asset type
            manufacturers_id:
              type: integer
              description: The ID of the manufacturer
            assetTypes_description:
              type: string
              description: The description of the asset type
            assetTypes_definableFields:
              type: string
              description: A comma-separated list of 10 definable field names
            assetTypes_mass:
              type: number
              description: The weight of the asset type
            assetTypes_inserted:
              type: string
              description: The date the asset type was inserted
            assetTypes_value:
              type: string
              description: The value of the asset type
            assetTypes_dayRate:
              type: number
              description: The day rate of the asset type
            assetTypes_weekRate:
              type: number
              description: The week rate of the asset type
    post:
      tags:
        - assets
      summary: Edit an Asset Type
      description: |
        Edits an asset type's data  
        Requires Instance Permission 58 (Edit Asset Type)
      operationId: editAssetType
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: null
                    description: an empty array
                example:
                  result: true
                  response: []
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                UpdateFail:
                  value:
                    result: false
                    error:
                      {
                        code: "UPDATE-FAIL",
                        message: "Could not update asset type",
                      }
                ParamError:
                  value:
                    result: false
                    error:
                      { code: "PARAM-ERROR", message: "No data for action" }
  /assets/editAssetTypeDefinableFields.php:
    parameters:
      - name: formData
        in: query
        description: The data to update the asset type's definable fields with
        required: true
        schema:
          type: object
          properties:
            assetTypes_id:
              type: integer
              description: The ID of the asset type to update
            assetTypes_definableFields_1:
              type: string
            assetTypes_definableFields_2:
              type: string
            assetTypes_definableFields_3:
              type: string
            assetTypes_definableFields_4:
              type: string
            assetTypes_definableFields_5:
              type: string
            assetTypes_definableFields_6:
              type: string
            assetTypes_definableFields_7:
              type: string
            assetTypes_definableFields_8:
              type: string
            assetTypes_definableFields_9:
              type: string
            assetTypes_definableFields_10:
              type: string
    post:
      tags:
        - assets
      summary: Edit an Asset Type's Definable Fields
      description: |
        Edits an asset type's definable fields  
        Requires Instance Permission 58 (Edit Asset Type)
      operationId: editAssetTypeDefinableFields
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  message:
                    type: null
                    description: an empty array
                example:
                  result: true
                  message: []
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                UpdateFail:
                  value:
                    result: false
                    error:
                      {
                        code: "UPDATE-FAIL",
                        message: "Could not update asset type",
                      }
                ParamError:
                  value:
                    result: false
                    error:
                      { code: "PARAM-ERROR", message: "No data for action" }
  /assets/export.php:
    parameters:
      - name: csv
        in: query
        description: Whether to export as a CSV file
        required: false
        schema:
          type: any
      - name: xlsx
        in: query
        description: Whether to export as an XLSX file
        required: false
        schema:
          type: any
    post:
      tags:
        - assets
      summary: Export Assets
      description: |
        Exports assets
      operationId: exportAssets
      responses:
        200:
          description: Success
          content:
            application/csv:
              schema:
                type: string
                format: binary
                description: The CSV file
            application/xlsx:
              schema:
                type: string
                format: binary
                description: The XLSX file
        404:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: 404
  /assets/getAssetTypeData.php:
    parameters:
      - name: term
        in: query
        description: The ID of the asset type to get data for
        required: true
        schema:
          type: integer
    post:
      tags:
        - assets
      summary: Get Asset Type Data
      description: |
        Gets data for an asset type
      operationId: getAssetTypeData
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  assetType:
                    type: object
                    description: An object containing the asset type's data
                    properties:
                      assetTypes_id:
                        type: integer
                        description: The ID of the asset type
                      assetTypes_name:
                        type: string
                        description: The name of the asset type
                      assetCategories_id:
                        type: integer
                        description: The ID of the asset category
                      assetTypes_productLink:
                        type: string
                        description: Link to the website of the asset type
                      manufacturers_id:
                        type: integer
                        description: The ID of the manufacturer
                      assetTypes_description:
                        type: string
                        description: The description of the asset type
                      assetTypes_definableFields:
                        type: string
                        description: A comma-separated list of 10 definable field names
                      assetTypes_mass:
                        type: number
                        description: The weight of the asset type
                      assetTypes_inserted:
                        type: string
                        description: The date the asset type was inserted
                      assetTypes_value:
                        type: string
                        description: The value of the asset type
                      assetTypes_dayRate:
                        type: number
                        description: The day rate of the asset type
                      assetTypes_weekRate:
                        type: number
                        description: The week rate of the asset type
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                AssetTypeNotFound:
                  value:
                    result: false
                    error: { code: "AUTH-ERROR", message: "No auth for action" }
                ListError:
                  value:
                    result: false
                    error:
                      {
                        code: "LIST-ASSETTYPES-FAIL",
                        message: "Could not find asset",
                      }
  /assets/list.php:
    parameters:
      - name: term
        in: query
        description: A search term to filter the list by
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: The page number to get
        required: false
        schema:
          type: integer
      - name: pageLimit
        in: query
        description: The number of items to get per page
        required: false
        schema:
          type: integer
      - name: category
        in: query
        description: The ID of the asset category to filter by
        required: false
        schema:
          type: integer
      - name: manufacturer
        in: query
        description: The ID of the manufacturer to filter by
        required: false
        schema:
          type: integer
      - name: assetTypes_id
        in: query
        description: The ID of the asset type to filter by
        required: false
        schema:
          type: integer
      - name: all
        in: query
        description: Whether to get all linked assets
        required: false
        schema:
          type: any
      - name: abridgedList
        in: query
        description: Whether to get file and flags & blocks
        required: false
        schema:
          type: boolean
    post:
      tags:
        - assets
      summary: List Assets
      description: |
        Lists assets
      operationId: listAssets
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  assets:
                    type: array
                    description: An array of asset objects
                    items:
                      type: object
                      properties:
                        assets_id:
                          type: integer
                          description: The ID of the asset
                        assets_name:
                          type: string
                          description: The name of the asset
                        assetTypes_id:
                          type: integer
                          description: The ID of the asset type
                        assetTypes_name:
                          type: string
                          description: The name of the asset type
                        assetCategories_id:
                          type: integer
                          description: The ID of the asset category
                        assetCategories_name:
                          type: string
                          description: The name of the asset category
                        manufacturers_id:
                          type: integer
                          description: The ID of the manufacturer
                        manufacturers_name:
                          type: string
                          description: The name of the manufacturer
                        assets_description:
                          type: string
                          description: The description of the asset
                        assets_serialNumber:
                          type: string
                          description: The serial number of the asset
                        assets_barcode:
                          type: string
                          description: The barcode of the asset
                        assets_value:
                          type: string
                          description: The value of the asset
                        assets_dayRate:
                          type: number
                          description: The day rate of the asset
                        assets_weekRate:
                          type: number
                          description: The week rate of the asset
                        assets_monthRate:
                          type: number
                          description: The month rate of the asset
                        assets_yearRate:
                          type: number
                          description: The year rate of the asset
                        assets_mass:
                          type: number
                          description: The weight of the asset
                        assets_productLink:
                          type: string
                          description: Link to the website of the asset
                        assets_inserted:
                          type: string
                          description: The date the asset was inserted
                        assets_updated:
                          type: string
                          description: The date the asset was last updated
                        assets_deleted:
                          type: string
                          description: The date the asset was deleted
                        assets_status:
                          type: string
                          description: The status of the asset
                        assets_flags:
                          type: string#
                  pagination:
                    type: number
                    description: An object containing pagination data
  /assets/newAssetFromType.php:
    parameters:
      - name: formData
        in: query
        description: The data to create the asset from
        required: true
        schema:
          type: object
          properties:
            assetTypes_id:
              type: integer
              description: The ID of the asset type
              required: true
            assets_tag:
              type: string
              description: The tag of the asset
            assets_notes:
              type: string
            assets_assetGroups:
              type: string
            asset_definableFields_1:
              type: string
            asset_definableFields_2:
              type: string
            asset_definableFields_3:
              type: string
            asset_definableFields_4:
              type: string
            asset_definableFields_5:
              type: string
            asset_definableFields_6:
              type: string
            asset_definableFields_7:
              type: string
            asset_definableFields_8:
              type: string
            asset_definableFields_9:
              type: string
            asset_definableFields_10:
              type: string
    post:
      tags:
        - assets
      summary: Create Asset From Type
      description: |
        Creates an asset from an asset type
        Requires Instance Permission 17 (Create Asset)
      operationId: createAssetFromType
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
                    properties:
                      assets_id:
                        type: integer
                        description: The ID of the asset
                      assets_tag:
                        type: string
                        description: The tag of the asset
                      assetTypes_id:
                        type: integer
                        description: The ID of the asset type
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        description: The error code
                      error:
                        type: array
                        description: An Array containing an error code and a message
              examples:
                TypeFail:
                  value:
                    result: false
                    error:
                      {
                        code: "LIST-ASSETTYPES-FAIL",
                        message: "Could not find asset type",
                      }
                InsertFail:
                  value:
                    result: false
                    error:
                      { code: "INSERT-FAIL", message: "Could not insert asset" }
                ParamError:
                  value:
                    result: false
                    error:
                      { code: "PARAM-ERROR", message: "No data for action" }
  /assets/newAssetType.php:
    parameters:
      - name: formData
        in: query
        description: The data to create the asset type from
        required: true
        schema:
          type: object
          properties:
            assetTypes_name:
              type: string
              description: The name of the asset type
              required: true
            assetTypes_description:
              type: string
              description: The description of the asset type
            assetCategories_id:
              type: integer
              description: The ID of the asset category
            manufacturers_id:
              type: integer
              description: The ID of the manufacturer
            assetTypes_productLink:
              type: string
              description: Link to the website of the asset type
            assetTypes_definableFields_1:
              type: string
              description: The first definable field
            assetTypes_definableFields_2:
              type: string
              description: The second definable field
            assetTypes_definableFields_3:
              type: string
              description: The third definable field
            assetTypes_definableFields_4:
              type: string
              description: The fourth definable field
            assetTypes_definableFields_5:
              type: string
              description: The fifth definable field
            assetTypes_definableFields_6:
              type: string
              description: The sixth definable field
            assetTypes_definableFields_7:
              type: string
              description: The seventh definable field
            assetTypes_definableFields_8:
              type: string
              description: The eighth definable field
            assetTypes_definableFields_9:
              type: string
              description: The ninth definable field
            assetTypes_definableFields_10:
              type: string
              description: The tenth definable field
            assetTypes_mass:
              type: number
              description: The weight of the asset type
            assetTypes_inserted:
              type: string
              description: The date the asset type was inserted
            assetTypes_dayRate:
              type: number
              description: The day rate of the asset type
            assetTypes_weekRate:
              type: number
              description: The week rate of the asset type
            assetTypes_value:
              type: number
              description: The value of the asset type
    post:
      tags:
        - assets
      summary: Create Asset Type
      description: |
        Creates an asset type  
        Requires Instance Permission 18 (Create Asset Type)
      operationId: createAssetType
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
                    properties:
                      assetTypes_id:
                        type: integer
                        description: The ID of the asset type
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        description: The error code
                      error:
                        type: array
                        description: An Array containing an error code and a message
              examples:
                InsertFail:
                  value:
                    result: false
                    error:
                      {
                        code: "INSERT-FAIL",
                        message: "Could not insert asset type",
                      }
                ParamError:
                  value:
                    result: false
                    error:
                      { code: "PARAM-ERROR", message: "No data for action" }
  /assets/searchAssets.php:
    parameters:
      - name: term
        in: query
        description: The term to search for
        required: false
        schema:
          type: string
    post:
      tags:
        - assets
      summary: Simple Asset Search
      description: |
        Searches for assets by tag or name  
        Deprecated, use /assets/deepSearch.php instead
      deprecated: true
      operationId: simpleAssetSearch
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: An array of assets
                    items:
                      type: object
                      properties:
                        tag:
                          type: string
                          description: The tag of the asset
                        assets_id:
                          type: integer
                          description: The ID of the asset
                        assets_tag:
                          type: string
                          description: The tag of the asset
                        assetTypes_name:
                          type: string
                          description: The name of the asset type
                        assetTypes_id:
                          type: integer
                          description: The ID of the asset type
                        assetCategories_name:
                          type: string
                          description: The name of the asset category
                        assetCategoriesGroups_name:
                          type: string
                          description: The name of the asset category group
                        manufacturers_name:
                          type: string
                          description: The name of the manufacturer
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                AssetsFail:
                  value:
                    result: false
                    error:
                      { code: "LIST-ASSETS-FAIL", message: "Could not search" }
  /assets/searchAssetsBarcode.php:
    get:
      tags:
        - assets
      summary: Search Assets by Barcode
      description: |
        Redirects to assets/barcodes/search.php
      operationId: searchAssetsBarcode
      deprecated: true
      responses:
        308:
          description: Redirect
  assets/searchType.php:
    parameters:
      - name: term
        in: query
        description: The term to search for
        required: false
        schema:
          type: string
      - name: manufacturer
        in: query
        description: The manufacturer to search for
        required: false
        schema:
          type: string
    post:
      tags:
        - assets
      summary: Asset Type Search
      description: |
        Searches for asset types by name or manufacturer
      operationId: assetTypeSearch
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: list of assets
                    items:
                      type: object
                      properties:
                        assetTypes_name:
                          type: string
                          description: The name of the asset type
                        assetTypes_id:
                          type: integer
                          description: The ID of the asset type
                        assetCategories_name:
                          type: string
                          description: The name of the asset category
                        assetCategoriesGroups_name:
                          type: string
                          description: The name of the asset category group
                        manufacturers_name:
                          type: string
                          description: The name of the manufacturer
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                AssetTypeFail:
                  value:
                    result: false
                    error:
                      {
                        code: "LIST-ASSETTYPES-FAIL",
                        message: "Could not search",
                      }
  /assets/substitutions.php:
    parameters:
      - name: assetsAssignments_id
        in: query
        description: The ID of the asset assignment
        required: true
        schema:
          type: integer
    post:
      tags:
        - assets
      summary: Get Swappable Assets
      description: |
        Gets a list of assets that can be swapped with the given asset assignment
      operationId: getSwappableAssets
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: An array of assets
                    items:
                      type: object
                      properties:
                        assets_id:
                          type: integer
                          description: The ID of the asset
                        assets_tag:
                          type: string
                          description: The tag of the asset
                        asset_definableFields_1:
                          type: string
                          description: The First Definable field value, usually for length
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                NoAssets:
                  value:
                    result: true
                    error: { code: "NO-ASSETS", message: "No Assets Available" }
                NoAsset:
                  value:
                    result: false
                    error: { code: "", message: "No Asset Found" }
  /assets/barcodes/assign.php:
    parameters:
      - name: tag
        in: query
        description: The tag of the Asset to assign a barcode to
        required: true
        schema:
          type: string
      - name: barcodeid
        in: query
        description: An ID of an existing barcode or false
        required: true
        schema:
          oneOf:
            - type: number
            - type: boolean
      - name: text
        in: query
        description: the value of a new barcode
        required: false
        schema:
          type: string
      - name: type
        in: query
        description: The Barcode type
        required: false
        schema:
          type: string
    post:
      tags:
        - barcodes
      summary: Assign Barcode
      description: |
        Assign a barcode to an asset  
        Requires Instance Permission 88 (Associate barcodes with an Asset)
      operationId: assignBarcode
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
                    properties:
                      type: object
                      properties:
                        assets_id:
                          type: integer
                          description: The ID of the asset
                        assetTypes_id:
                          type: string
                          description: The tag of the asset
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                ParamError:
                  value:
                    result: false
                    error:
                      { code: "PARAM-ERROR", message: "No data for action" }
                InsertError:
                  value:
                    result: false
                    error: { code: "", message: "Barcode insert error" }
                UpdateError:
                  value:
                    result: false
                    error:
                      {
                        code: "UPDATE-FAIL",
                        message: "Could not update barcode",
                      }
  /assets/barcodes/delete.php:
    parameters:
      - name: barcodes_id
        in: query
        description: the ID to remove
        required: true
        schema:
          type: integer
    post:
      tags:
        - barcodes
      summary: Delete Barcode
      description: |
        Delete a barcode  
        Requires Instance Permission 86 (Delete Barcode)
      operationId: deleteBarcode
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                ParamError:
                  value:
                    result: false
                    error:
                      { code: "PARAM-ERROR", message: "No data for action" }
                DeleteFail:
                  value:
                    result: false
                    error:
                      {
                        code: "DELETE-FAIL",
                        message: "Could not delete barcode",
                      }
  /assets/barcodes/index.php:
    parameters:
      - name: type
        in: query
        description: The Barcode type
        required: false
        schema:
          type: string
      - name: barcode
        in: query
        description: Value of the Barcode
        required: true
        schema:
          type: string
      - name: size
        in: query
        description: Size of returned barcode
        required: false
        schema:
          type: number
      - name: width
        in: query
        description: Width of the returned barcode
        required: false
        schema:
          type: number
    post:
      tags:
        - barcodes
      summary: Generate Barcode Image
      description: |
        Generate an image of a given barcode value
      operationId: generateBarcode
      responses:
        200:
          description: Barcode Image
          content:
            application/png:
              schema:
                type: string
                format: binary
                description: Image of a barcode
  /assets/barcodes/search.php:
    parameters:
      - name: text
        in: query
        description: The barcode value
        required: true
        schema:
          type: string
      - name: type
        in: query
        description: The barcode type
        required: true
        schema:
          type: string
      - name: locationType
        in: query
        description: What the location is
        required: false
        schema:
          type: string
    post:
      tags:
        - barcodes
      summary: Barcode Asset Search
      description: |
        Search for an Asset using a barcode
      operationId: barcodeSearch
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
                    properties:
                      asset:
                        type: object
                        description: Matching asset
                      assetSuggest:
                        type: object
                        description: Suggested Assets
                      barcode:
                        type: string
                        description: Scanned barcode
                      location:
                        type: object
                        description: Matching location
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                ParamError:
                  value:
                    result: true
                    error: {}
  /barcodes/searchAsset.php:
    parameters:
      - name: term
        in: query
        description: the barcode/tag to search for
        required: true
        schema:
          type: string
    post:
      tags:
        - barcodes
      summary: Search by Barcode
      description: |
        A simpler barcode search
      operationId: barcodeAssetSearch
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: List of 15 assets
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                ParamError:
                  value:
                    result: false
                    error: { code: "AUTH-ERROR", message: "No auth for action" }
                AssetsFail:
                  value:
                    result: false
                    error:
                      {
                        code: "LIST-ASSETS-FAIL",
                        message: "Could not search for assets",
                      }
  /categories/edit.php:
    parameters:
      - name: formData
        in: query
        description: The category data
        required: true
        schema:
          type: object
          properties:
            assetCategories_id:
              type: integer
              description: The ID of the category
              required: true
            assetCategories_name:
              type: string
              description: The name of the category
            assetCategories_fontAwesome:
              type: string
              description: The font awesome icon for the category
            assetCategoriesGroups_id:
              type: integer
              description: The ID of the category group
    post:
      tags:
        - categories
      summary: Edit Asset Category
      description: |
        Edit a category
      operationId: editCategory
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                ParamError:
                  value:
                    result: false
                    error:
                      { code: "PARAM-ERROR", message: "No data for action" }
                UpdateFail:
                  value:
                    result: false
                    error: {}
  /category/new.php:
    parameters:
      - name: formData
        in: query
        description: The category data
        required: true
        schema:
          type: object
          properties:
            assetCategories_name:
              type: string
              description: The name of the category
            assetCategories_fontAwesome:
              type: string
              description: The font awesome icon for the category
            assetCategoriesGroups_id:
              type: integer
              description: The ID of the category group
    post:
      tags:
        - categories
      summary: Create Asset Category
      description: |
        Create a category
      operationId: createCategory
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                ParamError:
                  value:
                    result: object
                    error:
                      { code: "PARAM-ERROR", message: "No data for action" }
                InsertFail:
                  value:
                    result: false
                    error: {}
  /categories/search.php:
    parameters:
      - name: term
        in: query
        description: The search term
        required: true
        schema:
          type: string
      - name: instance_id
        in: query
        description: the InstanceID
        required: false
        schema:
          type: integer
    post:
      tags:
        - categories
      summary: Search Asset Categories
      description: |
        Search for categories
      operationId: searchCategories
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A list of categories
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An Array containing an error code and a message
              examples:
                ParamError:
                  value:
                    result: false
                    error: {}
  /clients/edit.php:
    parameters:
      - name: formData
        in: query
        description: The client data
        required: true
        schema:
          type: object
          properties:
            clients_id:
              type: integer
              description: The ID of the client
              required: true
            clients_name:
              type: string
              description: The name of the client
            clients_address:
              type: string
              description: The address of the client
            clients_phone:
              type: string
              description: The phone number of the client
            clients_email:
              type: string
              description: The email of the client
            clients_website:
              type: string
              description: The website of the client
            clients_notes:
              type: string
              description: The notes of the client
    post:
      tags:
        - clients
      summary: Edit Client
      description: |
        Edit a client  
        Requires Instance Permission 39 (Edit Clients)
      operationId: editClient
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                ParamError:
                  value:
                    result: false
                    error:
                      { code: "PARAM-ERROR", message: "No data for action" }
                UpdateFail:
                  value:
                    result: false
                    error: {}
  /clients/new.php:
    parameters:
      - name: clients_name
        in: query
        description: The name of the client
        required: true
        schema:
          type: string
    post:
      tags:
        - clients
      summary: Create Client
      description: |
        Create a client  
        Requires Instance Permission 37 (Create Clients)
      operationId: createClient
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
                    description: Object containing the clients_id
              examples:
                Success:
                  value:
                    result: true
                    response:
                      clients_id: 1
        400:
          description: Error
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                InsertFail:
                  value:
                    result: false
                    error:
                      {
                        code: "CREATE-CLIENT-FAIL",
                        message: "Could not create new client",
                      }
  /cms/editPageConfig.php:
    parameters:
      - name: formData
        in: query
        description: The page config data
        required: true
        schema:
          type: object
    post:
      tags:
        - cms
      summary: Edit CMS Page Config
      description: |
        Edit a page config  
        Requires Instance Permission 126 (Edit Page Config)
      operationId: editPageConfig
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        404:
          description: Error
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                UpdateFail:
                  value:
                    result: false
                    error: {}
  /cms/editPageContent-rollback.php:
    parameters:
      - name: cmsPages_id
        in: query
        description: The ID of the page
        required: true
        schema:
          type: integer
      - name: change
        in: query
        description: The description of the change
        required: true
        schema:
          type: string
    post:
      tags:
        - cms
      summary: Rollback CMS Page Content
      description: |
        Rollback a page content  
        Requires Instance Permission 126 (Edit Page Content)
      operationId: rollbackPageContent
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        404:
          description: Error
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                UpdateFail:
                  value:
                    result: false
                    error: {}
  /cms/editPageContent.php:
    parameters:
      - name: cmsPages_id
        in: query
        description: The ID of the page
        required: true
        schema:
          type: integer
      - name: pageData
        in: query
        description: The page data
        required: true
        schema:
          type: string
      - name: changelog
        in: query
        description: The description of the change
        required: true
        schema:
          type: string
    post:
      tags:
        - cms
      summary: Edit CMS Page Content
      description: |
        Edit a page content  
        Requires Instance Permission 126 (Edit Page Content)
      operationId: editPageContent
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
                    description: Object containing the revision data and id
        404:
          description: Error
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                UpdateFail:
                  value:
                    result: false
                    error: {}
  /cms/editPageRank.php:
    parameters:
      - name: order
        in: query
        description: The page rank data
        required: true
        schema:
          type: array
    post:
      tags:
        - cms
      summary: Edit CMS Page Rank
      description: |
        Edit a page rank  
        Requires Instance Permission 126 (Edit Page Data)
      operationId: editPageRank
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        404:
          description: Error
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                UpdateFail:
                  value:
                    result: false
                    error: {}
  /cms/get.php:
    parameters:
      - name: p
        in: query
        description: The page id
        required: true
        schema:
          type: integer
    post:
      tags:
        - cms
      summary: Get CMS Page
      description: |
        Get a page
      operationId: getPage
      responses:
        200:
          description: Success
          content:
            application/html:
              schema:
                type: object
                description: HTML code for the page content
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
                    properties:
                      PUBLIC:
                        type: boolean
                      AUTH:
                        type: object
                      html:
                        type: html
                        description: HTML code for the page content
        404:
          description: Error
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                GetFail:
                  value:
                    result: false
                    error: { code: "NO_PAGE", message: "Page not found" }
  /cms/list.php:
    get:
      tags:
        - cms
      summary: List CMS Pages
      description: |
        List all pages
      operationId: listPages
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: An Array containing all pages
  /cms/setCustomDashboard.php:
    parameters:
      - name: instancePositions_id
        in: query
        description: instance position for the dashboard
        required: true
        schema:
          type: number
      - name: cmsPages_id
        in: query
        description: The page id
        required: true
        schema:
          type: number
    post:
      tags:
        - cms
      summary: Set Custom Dashboard
      description: |
        Set a custom dashboard  
        Requires Instance Permission 126 (Edit Page Data)
      operationId: setCustomDashboard
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        404:
          description: Error
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: A null array
              examples:
                UpdateFail:
                  value:
                    result: false
                    error: {}
  /file/delete.php:
    parameters:
      - name: s3files_id
        in: query
        description: The file id
        required: true
        schema:
          type: integer
    post:
      tags:
        - file_uploads
      summary: Delete File
      description: |
        Delete a file  
        Requires Instance Permission 57 (Delete File)
      operationId: deleteFile
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        404:
          description: Error
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: A null array
              examples:
                DeleteFail:
                  value:
                    result: false
                    error: {}
  /file/index.php:
    parameters:
      - name: f
        in: query
        description: The file id
        required: true
        schema:
          type: integer
      - name: s
        in: query
        description: |
          The file size  
          false to get the original, available is "tiny" (50px) "small" (100px) "medium" (500px) "large" (1000px)
        required: false
        schema:
          type: string | boolean
      - name: d
        in: query
        description: should a download be forced or should it be displayed in the browser? (if set it will download)
        required: false
        schema:
          type: boolean
      - name: r
        in: query
        description: should the url be returned by the script as plain text or a redirect triggered? (if set it will redirect)
        required: false
        schema:
          type: boolean
      - name: e
        in: query
        description: when should the link expire? Must be a string describing how long in words basically. If this file type has security features then it will default to 1 minute.
        required: false
        schema:
          type: boolean
    post:
      tags:
        - file_uploads
      summary: Get File
      description: |
        Get a file
      operationId: getFile
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
                    description: Object containing the file data
        308:
          description: Success - Redirect to this address
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: a message
              examples:
                GetFail:
                  value:
                    result: false
                    error:
                      {
                        message: "File not found - please check to ensure you are still logged in",
                      }
  /file/removeShare.php:
    parameters:
      - name: s3files_id
        in: query
        description: The file id
        required: true
        schema:
          type: integer
    post:
      tags:
        - file_uploads
      summary: Remove File Share
      description: |
        Remove a file share  
        Requires Instance Permission 127 (Manage a file's sharing status)
      operationId: removeFileShare
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        404:
          description: Error
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: A null array
              examples:
                RemoveFail:
                  value:
                    result: false
                    error: {}
  /file/rename.php:
    parameters:
      - name: s3files_id
        in: query
        description: The file id
        required: true
        schema:
          type: integer
      - name: s3files_name
        in: query
        description: The new file name
        required: true
        schema:
          type: string
    post:
      tags:
        - file_uploads
      summary: Rename File
      description: |
        Rename a file  
        Requires Instance Permission 56 (Rename File)
      operationId: renameFile
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        404:
          description: Error
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: A null array
              examples:
                RenameFail:
                  value:
                    result: false
                    error: {}
    /file/share.php:
      parameters:
        - name: s3files_id
          in: query
          description: The file id
          required: true
          schema:
            type: integer
      post:
        tags:
          - file_uploads
        summary: Share File
        description: |
          Share a file  
          Requires Instance Permission 127 (Manage a file's sharing status)
        operationId: shareFile
        responses:
          200:
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    result:
                      type: boolean
                      description: Whether the request was successful
                    response:
                      type: array
                      description: A null Array
          404:
            description: Error
          "default":
            description: Error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    result:
                      type: boolean
                      description: Whether the request was successful
                    error:
                      type: array
                      description: A null array
                examples:
                  ShareFail:
                    value:
                      result: false
                      error: {}
  /groups/addAsset.php:
    parameters:
      - name: assetGroups_id
        in: query
        description: The group id
        required: true
        schema:
          type: integer
      - name: assets_id
        in: query
        description: The asset id
        required: true
        schema:
          type: integer
    post:
      tags:
        - groups
      summary: Add Asset to Group
      description: |
        Add an asset to a group  
        Requires Instance Permission 96 (Add/Remove group members)
      operationId: addAssetToGroup
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: A null array
              examples:
                AddFail:
                  value:
                    result: false
                    error: {}
  /groups/edit.php:
    parameters:
      - name: formData
        in: query
        description: The group data
        required: true
        schema:
          type: object
          properties:
            assetGroups_id:
              type: integer
              description: The group id
            personal:
              type: boolean
              description: Whether the group is personal
            assetGroups_name:
              type: string
              description: The group name
            assetGroups_description:
              type: string
              description: The group description
    post:
      tags:
        - groups
      summary: Edit Group
      description: |
        Edit a group  
        Requires Instance Permission 94 (Edit group details)
      operationId: editGroup
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: A null array
              examples:
                EditFail:
                  value:
                    result: false
                    error: {}
  /groups/new.php:
    parameters:
      - name: formData
        in: query
        description: The group data
        required: true
        schema:
          type: object
          properties:
            personal:
              type: boolean
              description: Whether the group is personal
            assetGroups_name:
              type: string
              description: The group name
            assetGroups_description:
              type: string
              description: The group description
    post:
      tags:
        - groups
      summary: Create Group
      description: |
        Create a group  
        Requires Instance Permission 93 (Create new group)
      operationId: createGroup
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: A null array
              examples:
                CreateFail:
                  value:
                    result: false
                    error: {}
  /groups/removeAsset.php:
    parameters:
      - name: assetGroups_id
        in: query
        description: The group id
        required: true
        schema:
          type: integer
      - name: assets_id
        in: query
        description: The asset id
        required: true
        schema:
          type: integer
    post:
      tags:
        - groups
      summary: Remove Asset from Group
      description: |
        Remove an asset from a group  
        Requires Instance Permission 96 (Add/Remove group members)
      operationId: removeAssetFromGroup
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: A null array
              examples:
                RemoveFail:
                  value:
                    result: false
                    error: {}
  /groups/search.php:
    parameters:
      - name: term
        in: query
        description: The search term
        required: true
        schema:
          type: string
    post:
      tags:
        - groups
      summary: Search Groups
      description: |
        Search for groups
      operationId: searchGroups
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: An array of groups
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: A null array
              examples:
                SearchFail:
                  value:
                    result: false
                    error: { message: "Could not search for Groups" }
  /groups/watch.php:
    parameters:
      - name: assetGroups_id
        in: query
        description: The group id
        required: true
        schema:
          type: integer
    post:
      tags:
        - groups
      summary: Watch Group
      description: |
        Watch a group
      operationId: watchGroup
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: A null array
              examples:
                WatchFail:
                  value:
                    result: false
                    error: {}
  /instances/assetAssignmentStatus/delete.php:
    parameters:
      - name: statusId
        in: query
        description: The status id
        required: true
        schema:
          type: integer
    post:
      tags:
        - assetAssignmentStatus
      summary: Delete Asset Assignment Status
      description: |
        Delete an asset assignment status  
        Requires Instance Permission 83 (Edit business settings)
      operationId: deleteAssetAssignmentStatus
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
              examples:
                DeleteFail:
                  value:
                    result: false
                    error:
                      {
                        code: "REMOVE-STATUS-FAIL",
                        message: "Could not remove asset status from Business",
                      }
                ParamError:
                  value:
                    result: false
                    error:
                      { code: "", message: "invalid status id or permission" }
  /instances/assetAssignmentStatus/edit.php:
    parameters:
      - name: statusId
        in: query
        description: The status id
        required: true
        schema:
          type: integer
      - name: statusName
        in: query
        description: The status name
        required: true
        schema:
          type: string
    post:
      tags:
        - assetAssignmentStatus
      summary: Edit Asset Assignment Status
      description: |
        Edit an asset assignment status  
        Requires Instance Permission 83 (Edit business settings)
      operationId: editAssetAssignmentStatus
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
              examples:
                EditFail:
                  value:
                    result: false
                    error:
                      {
                        code: "UPDATE-STATUS-FAIL",
                        message: "Could not Update asset status",
                      }
                ParamError:
                  value:
                    result: false
  /instances/assetAssignmentStatus/new.php:
    parameters:
      - name: statusName
        in: query
        description: The status name
        required: true
        schema:
          type: string
      - name: statusOrder
        in: query
        description: The status order
        required: true
        schema:
          type: integer
    post:
      tags:
        - assetAssignmentStatus
      summary: Create Asset Assignment Status
      description: |
        Create an asset assignment status  
        Requires Instance Permission 83 (Edit business settings)
      operationId: createAssetAssignmentStatus
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
              examples:
                CreateFail:
                  value:
                    result: false
                    error:
                      {
                        code: "ADD-STATUS-FAIL",
                        message: "Could not create new asset assignment status",
                      }
                ParamError:
                  value:
                    result: false
  /instances/assetAssignmentStatus/reorder.php:
    parameters:
      - name: order
        in: query
        description: The order of the statuses
        required: true
        schema:
          type: array
          items:
            type: integer
            description: The status id
    post:
      tags:
        - assetAssignmentStatus
      summary: Reorder Asset Assignment Status
      description: |
        Reorder asset assignment statuses  
        Requires Instance Permission 83 (Edit business settings)
      operationId: reorderAssetAssignmentStatus
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
              examples:
                ParamError:
                  value:
                    result: false
  /instances/projectTypes/edit.php:
    parameters:
      - name: formData
        in: query
        description: The project type data
        required: true
        schema:
          type: object
          properties:
            projectsTypes_id:
              type: integer
              description: The project type id
            projectTypes_name:
              type: string
              description: The project type name
            projectsTypes_config_finance:
              type: boolean
              description: Use finance in project type
            projectsTypes_config_files:
              type: boolean
              description: Use files in project type
            projectsTypes_config_assets:
              type: boolean
              description: Use assets in project type
            projectsTypes_config_client:
              type: boolean
              description: Use clients in project type
            projectsTypes_config_venue:
              type: boolean
              description: Use locations in project type
            projectsTypes_config_notes:
              type: boolean
              description: Use notes in project type
            projectsTypes_config_crew:
              type: boolean
              description: Use crew in project type
    post:
      tags:
        - projectTypes
      summary: Edit Project Type
      description: |
        Edit a project type  
        Requires Instance Permission 107 (Edit Project Type)
      operationId: editProjectType
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
              examples:
                ParamError:
                  value:
                    result: false
                    error:
                      { code: "PARAM-ERROR", message: "No data for action" }
                OtherError:
                  value:
                    result: false
  instances/projectTypes/new.php:
    parameters:
      - name: formData
        in: query
        description: The project type data
        required: true
        schema:
          type: object
          properties:
            projectTypes_name:
              type: string
              description: The project type name
            projectsTypes_config_finance:
              type: boolean
              description: Use finance in project type
            projectsTypes_config_files:
              type: boolean
              description: Use files in project type
            projectsTypes_config_assets:
              type: boolean
              description: Use assets in project type
            projectsTypes_config_client:
              type: boolean
              description: Use clients in project type
            projectsTypes_config_venue:
              type: boolean
              description: Use locations in project type
            projectsTypes_config_notes:
              type: boolean
              description: Use notes in project type
            projectsTypes_config_crew:
              type: boolean
              description: Use crew in project type
    post:
      tags:
        - projectTypes
      summary: Create Project Type
      description: |
        Create a project type  
        Requires Instance Permission 106 (Create Project Type)
      operationId: createProjectType
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
              examples:
                ParamError:
                  value:
                    result: false
                    error:
                      { code: "PARAM-ERROR", message: "No data for action" }
                OtherError:
                  value:
                    result: false
  /instances/signupCodes/edit.php:
    parameters:
      - name: formData
        in: query
        description: The signup code data
        required: true
        schema:
          type: object
          properties:
            signupCodes_id:
              type: integer
              description: The signup code id
            signupCodes_name:
              type: string
              description: The signup code
            signupCodes_valid:
              type: boolean
              description: Whether the signup code is valid
            signupCodes_notes:
              type: string
              description: The signup code notes
            signupCodes_role:
              type: string
              description: Associated role for the signup code
            instancePositions_id:
              type: integer
              description: Associated position for the signup code
    post:
      tags:
        - signupCodes
      summary: Edit Signup Code
      description: |
        Edit a signup code  
        Requires Instance Permission 111 (Edit Signup Code)
      operationId: editSignupCode
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
              examples:
                ParamError:
                  value:
                    result: false
                    error:
                      { code: "PARAM-ERROR", message: "No data for action" }
                OtherError:
                  value:
                    result: false
  /instances/signupCodes/new.php:
    parameters:
      - name: formData
        in: query
        description: The signup code data
        required: true
        schema:
          type: object
          properties:
            signupCodes_name:
              type: string
              description: The signup code
            signupCodes_notes:
              type: string
              description: The signup code notes
            signupCodes_role:
              type: string
              description: Associated role for the signup code
            instancePositions_id:
              type: integer
              description: Associated position for the signup code
    post:
      tags:
        - signupCodes
      summary: Create Signup Code
      description: |
        Create a signup code  
        Requires Instance Permission 110 (Add new Signup Code)
      operationId: createSignupCode
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
              examples:
                ParamError:
                  value:
                    result: false
                    error:
                      { code: "PARAM-ERROR", message: "No data for action" }
                InUse:
                  value:
                    result: false
                    error: { code: "", message: "Sorry this code is in use" }
                OtherError:
                  value:
                    result: false
  /instances/signupCodes/taken.php:
    parameters:
      - name: signupCode
        in: query
        description: The signup code
        required: true
        schema:
          type: string
    get:
      tags:
        - signupCodes
      summary: Check if Signup Code is Taken
      description: |
        Check if a signup code is taken  
        Requires Instance Permission 109 (View list of Signup Codes)
      operationId: checkSignupCodeTaken
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: boolean
                    description: Whether the signup code is taken
        404:
          description: Permission Error
  /instances/addUser.php:
    parameters:
      - name: rolegroup
        in: query
        description: The instance position id
        required: true
        schema:
          type: number
      - name: rolename
        in: query
        description: The role name
        required: true
        schema:
          type: string
      - name: users
        in: query
        description: The user ids
        required: true
        schema:
          type: array
          items:
            type: number
    post:
      tags:
        - instances
      summary: Add User to Instance
      description: |
        Add a user to an instance  
        Requires Instance Permission 3 (Add a user to a business by EMail)
      operationId: addUserToInstance
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
              examples:
                AddFail:
                  value:
                    result: false
                    error:
                      {
                        code: "ADD-USER-TO-INSTANCE-FAIL",
                        message: "Could not add user to Business",
                      }
                AuthFail:
                  value:
                    result: false
                    error: { code: "AUTH-ERROR", message: "No auth for action" }
  /instances/addUserFromCode.php:
    parameters:
      - name: signupCodes_name
        in: query
        description: The signup code
        required: true
        schema:
          type: string
    post:
      tags:
        - instances
      summary: Join Instance using Signup Code
      description: Add a user to an instance from a signup code
      operationId: addUserToInstanceFromCode
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
              examples:
                AddFail:
                  value:
                    result: false
                    error:
                      {
                        code: "ADD-USER-TO-INSTANCE-FAIL",
                        message: "Could not add user to Business",
                      }
                AuthFail:
                  value:
                    result: false
                    error: { code: "AUTH-ERROR", message: "No auth for action" }
                InInstance:
                  value:
                    result: false
                    error:
                      {
                        code: "ALREADY-IN-INSTANCE",
                        message: "Already in Business",
                      }
  /instance/addUserFromTrustedDomain.php:
    parameters:
      - name: instances_id
        in: query
        description: The instance id
        required: true
        schema:
          type: number
    post:
      tags:
        - instances
      summary: Join Instance using Trusted Domain
      description: Add a user to an instance from a trusted domain
      operationId: addUserToInstanceFromTrustedDomain
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
              examples:
                AddFail:
                  value:
                    result: false
                    error:
                      {
                        code: "ADD-USER-TO-INSTANCE-FAIL",
                        message: "Could not add user to Business",
                      }
                AuthFail:
                  value:
                    result: false
                    error: { code: "AUTH-ERROR", message: "No auth for action" }
                InInstance:
                  value:
                    result: false
                    error:
                      {
                        code: "ALREADY-IN-INSTANCE",
                        message: "Already in Business",
                      }
  /instances/archiveUser.php:
    parameters:
      - name: users_id
        in: query
        description: The user id
        required: true
        schema:
          type: number
    post:
      tags:
        - instances
      summary: Archive User
      description: |
        Archive a user from an instance  
        Requires Instance Permission 118 (Archive a user)
      operationId: archiveUserFromInstance
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
              examples:
                ArchiveFail:
                  value:
                    result: false
                    error:
                      {
                        code: "ARCHIVE-USER-FAIL",
                        message: "Could not archive user from Business",
                      }
                AuthFail:
                  value:
                    result: false
                    error: { code: "AUTH-ERROR", message: "No auth for action" }
  /instances/editInstance.php:
    parameters:
      - name: formData
        in: query
        description: The instance data
        required: true
        schema:
          type: object
          properties:
            instances_name:
              type: string
              description: The instance name
            instances_address:
              type: string
              description: The instance address
            instances_phone:
              type: string
              description: The instance phone number
            instances_email:
              type: string
              description: The instance email
            instances_website:
              type: string
              description: The instance website
            instances_weekStartDates:
              type: string
              description: When the Instance's calendar start dates are
            instances_logo:
              type: number
              description: The file id for the instance logo
            instances_emailHeader:
              type: number
              description: The file id for the instance email header image
            instances_termsAndPayment:
              type: string
            instances_quoteTerms:
              type: string
            instances_cableColours:
              type: json
            instances_publicConfig:
              type: json
            instances_trustedDomains:
              type: json
    post:
      tags:
        - instances
      summary: Edit Instance
      description: |
        Edit an instance  
        Requires Instance Permission 83 (Edit Instance)
      operationId: editInstance
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
              examples:
                EditFail:
                  value:
                    result: false
                    error:
                      {
                        code: "UPDATE-FAIL",
                        message: "Could not update instance",
                      }
  /instances/editInstancePublicData.php:
    parameters:
      - name: formData
        in: query
        description: The instance data
        required: true
        schema:
          type: object
    post:
      tags:
        - instances
      summary: Edit Instance Public Data
      description: |
        Edit an instance's public data  
        Requires Instance Permission 83 (Edit Instance)
      operationId: editInstancePublicData
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
              examples:
                EditFail:
                  value:
                    result: false
                    error:
                      {
                        code: "UPDATE-FAIL",
                        message: "Could not update instance",
                      }
  /instances/editInstanceTrustedDomains.php:
    parameters:
      - name: formData
        in: query
        description: The instance data
        required: true
        schema:
          type: object
    post:
      tags:
        - instances
      summary: Edit Instance Trusted Domains
      description: |
        Edit an instance's trusted domains  
        Requires Instance Permission 83 (Edit Instance)
      operationId: editInstanceTrustedDomains
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
              examples:
                EditFail:
                  value:
                    result: false
                    error:
                      {
                        code: "UPDATE-FAIL",
                        message: "Could not update instance",
                      }
  /instances/editUser.php:
    parameters:
      - name: userinstanceid
        in: query
        description: The userinstance id
        required: true
        schema:
          type: number
      - name: position
        in: query
        description: The user's position id
        required: true
        schema:
          type: number
      - name: label
        in: query
        description: The user's role label
        required: true
        schema:
          type: string
    post:
      tags:
        - instances
      summary: Edit User
      description: |
        Edit a user's role  
        Requires Instance Permission 6 (Change the role of a user in a business)
      operationId: editUser
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
              examples:
                EditFail:
                  value:
                    result: false
                    error:
                      {
                        code: "EDIT-USER-TO-INSTANCE-FAIL",
                        message: "Could not edit user in Business",
                      }
                AuthError:
                  value:
                    result: false
                    error: { code: "AUTH-ERROR", message: "No auth for action" }
  /instances/list.php:
    get:
      tags:
        - instances
      summary: List User Instances
      description: |
        List all instances a user is a member of
      operationId: listUserInstances
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: An array of instances
                    items:
                      type: object
                      properties:
                        instances_id:
                          type: number
                          description: The instance id
                        instances_name:
                          type: string
                          description: The instance name
                        permissions:
                          type: array
                          description: An array of permissions
                        this:
                          type: boolean
                          description: Whether the instance is active for the user
  /instances/new.php:
    parameters:
      - name: instances_name
        in: query
        description: The instance name
        required: true
        schema:
          type: string
      - name: instances_website
        in: query
        description: The instance website
        required: true
        schema:
          type: string
      - name: instances_email
        in: query
        description: The instance email
        required: true
        schema:
          type: string
      - name: instances_phone
        in: query
        description: The instance phone number
        required: true
        schema:
          type: string
      - name: role
        in: query
        description: The user's role id
        required: true
        schema:
          type: number
    post:
      tags:
        - instances
      summary: Create Instance
      description: |
        Create a new instance  
        Requires RMS Permission 8 (Create Instance)
      operationId: createInstance
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
                    properties:
                      instanceid:
                        type: number
                        description: The instance id
        404:
          description: Auth Fail
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
              examples:
                CreateFail:
                  value:
                    result: false
                    error:
                      {
                        code: "CREATE-INSTANCE-FAIL",
                        message: "Could not create new business",
                      }
                PositionFail:
                  value:
                    result: false
                    error:
                      {
                        code: "CREATE-POSITION-FAIL",
                        message: "Could not create new business",
                      }
                UserFail:
                  value:
                    result: false
                    error:
                      {
                        code: "ADD-USER-TO-INSTANCE-FAIL",
                        message: "Could not create new business",
                      }
                ProjectFail:
                  value:
                    result: false
                    error:
                      {
                        code: "ADD-PROJECT-TYPE-FAIL",
                        message: "Could not create new project type",
                      }
                StatusFail:
                  value:
                    result: false
                    error:
                      {
                        code: "ADD-STATUS-FAIL",
                        message: "Could not create new assignment status",
                      }
  /instances/removeUser.php:
    parameters:
      - name: userid
        in: query
        description: The user id
        required: true
        schema:
          type: number
    post:
      tags:
        - instances
      summary: Remove User
      description: |
        Remove a user from an instance  
        Requires Instance Permission 5 (Remove a user from a business)
      operationId: removeUser
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
              examples:
                RemoveFail:
                  value:
                    result: false
                    error:
                      {
                        code: "REMOVE-USER-TO-INSTANCE-FAIL",
                        message: "Could not remove user from Business",
                      }
                AuthError:
                  value:
                    result: false
                    error: { code: "AUTH-ERROR", message: "No auth for action" }
  /instances/searchUser.php:
    parameter:
      - name: term
        in: query
        description: The search term
        required: true
        schema:
          type: string
    post:
      tags:
        - instances
      summary: Search Users
      description: |
        Search for users in an instance  
        Requires Instance Permission 3 (Add a user to a business)
      operationId: searchUser
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: An array of users
                    items:
                      type: object
                      properties:
                        users_userid:
                          type: number
                          description: The user id
                        users_name1:
                          type: string
                          description: The user name
                        users_name2:
                          type: string
                          description: The user second name
  /instances/switch.php:
    parameters:
      - name: instanceid
        in: query
        description: The instance id
        required: true
        schema:
          type: number
    post:
      tags:
        - instances
      summary: Switch Instance
      description: |
        Switch the active instance for the user
      operationId: switchInstance
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
              examples:
                AuthError:
                  value:
                    result: false
                    error:
                      { code: "PARAM-ERROR", message: "Provide an instance id" }
  /locations/edit.php:
    parameters:
      - name: formData
        in: query
        description: The location data
        required: true
        schema:
          type: object
          properties:
            locations_id:
              type: number
              description: The location id
            locations_name:
              type: string
              description: The location name
            clients_id:
              type: number
              description: The owning Client
            locations_address:
              type: string
              description: The location address
            locations_subOf:
              type: number
              description: The parent location
            locations_notes:
              type: string
              description: The location notes
    post:
      tags:
        - locations
      summary: Edit Location
      description: |
        Edit a location  
        Requires Instance Permission 99 (Edit a location)
      operationId: editLocation
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        404:
          description: Auth Fail
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
              examples:
                EditFail:
                  value:
                    result: false
                    error:
                      { code: "PARAM-ERROR", message: "No data for action" }
  /locations/new.php:
    parameters:
      - name: formData
        in: query
        description: The location data
        required: true
        schema:
          type: object
          properties:
            locations_name:
              type: string
              description: The location name
            clients_id:
              type: number
              description: The owning Client
            locations_address:
              type: string
              description: The location address
            locations_subOf:
              type: number
              description: The parent location
            locations_notes:
              type: string
              description: The location notes
    post:
      tags:
        - locations
      summary: New Location
      description: |
        Create a new location  
        Requires Instance Permission 98 (Add new location)
      operationId: newLocation
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        404:
          description: Auth Fail
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
              examples:
                NewFail:
                  value:
                    result: false
                    error:
                      { code: "PARAM-ERROR", message: "No data for action" }
  /login/authStep2Password.php:
    parameters:
      - name: formInput
        in: query
        description: Username
        required: true
        schema:
          type: string
      - name: password
        in: query
        description: Password
        required: true
        schema:
          type: string
    post:
      tags:
        - authentication
      summary: Login
      operationId: login
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
              examples:
                WebLogin:
                  value:
                    result: true
                    response: { "redirect": "/" }
                APILogin:
                  value:
                    result: true
                    response:
                      { "redirect": "{BaseURL}://oauth_callback?token={token}" }
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
              examples:
                NoData:
                  value:
                    result: false
                    error: { code: null, message: "No data specified" }
                NoUser:
                  value:
                    result: false
                    error:
                      {
                        code: null,
                        message: "No user found with associated email address or username",
                      }
                BruteForce:
                  value:
                    result: false
                    error:
                      {
                        code: null,
                        message: "Sorry - you've tried too many times to login - please try again in 5 minutes",
                      }
                NoAccount:
                  value:
                    result: false
                    error: { code: null, message: "Password incorrect" }
                UserSuspended:
                  value:
                    result: false
                    error: { code: 5, message: "User suspended" }
                NotVerified:
                  value:
                    result: false
                    error:
                      {
                        code: "VERIFYEMAIL",
                        message: "Please verify your email address using the link we sent you to login",
                      }
  /login/forgotPassword.php:
    parameters:
      - name: formInput
        in: query
        description: Username
        required: true
        schema:
          type: string
    post:
      tags:
        - authentication
      summary: Forgot Password
      description: Send a password reset email to the user
      operationId: forgotPassword
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
              examples:
                ForgotPassword:
                  value:
                    result: true
                    response: { "redirect": "/" }
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
              examples:
                NoData:
                  value:
                    result: false
                    error: { code: null, message: "No data specified" }
                NoUser:
                  value:
                    result: false
                    error:
                      {
                        code: null,
                        message: "No user found with associated email address or username",
                      }
  /login/loginAjaxHead.php:
    get:
      tags:
        - authentication
      summary: Login Ajax Head
      operationId: loginAjaxHead
  /login/reSendVerificationEmail.php:
    parameters:
      - name: userid
        in: query
        description: User ID
        required: true
        schema:
          type: number
    post:
      tags:
        - authentication
      summary: Resend Verification Email
      description: Resend the verification email to the user
      operationId: resendVerificationEmail
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
  /login/signup.php:
    parameters:
      - name: name1
        in: query
        description: First Name
        required: true
        schema:
          type: string
      - name: name2
        in: query
        description: Last Name
        required: true
        schema:
          type: string
      - name: password
        in: query
        description: Password
        required: true
        schema:
          type: string
      - name: username
        in: query
        description: Username
        required: true
        schema:
          type: string
      - name: email
        in: query
        description: Email
        required: true
        schema:
          type: string
    post:
      tags:
        - authentication
      summary: Signup
      description: Create a new user account
      operationId: signup
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
              examples:
                NoData:
                  value:
                    result: false
                    error: { code: null, message: "Unknown error" }
                NoUser:
                  value:
                    result: false
                    error: { code: null, message: "Can't create user" }
  /login/usernameOrEmailTaken.php:
    parameters:
      - name: username
        in: query
        description: Username
        required: true
        schema:
          type: string
      - name: email
        in: query
        description: Email
        required: true
        schema:
          type: string
    get:
      tags:
        - authentication
      summary: Username or Email Taken
      description: Check if a username or email is already taken
      operationId: usernameOrEmailTaken
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An object containing the error message and code
  /maintenance/job/addAsset.php:
    parameters:
      - name: maintenanceJobs_id
        in: query
        description: Maintenance Job ID
        required: true
        schema:
          type: number
      - name: maintenanceJobs_assets
        in: query
        description: Maintenance Job Assets
        required: true
        schema:
          type: array
    post:
      tags:
        - maintenanceJobs
      summary: Add Asset
      description: |
        Add an asset to a maintenance job  
        Requires Instance Permission 74 (Add Assets to Job)
      operationId: addAsset
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
  /maintenance/job/changeBlock.php:
    parameters:
      - name: maintenanceJobs_id
        in: query
        description: Maintenance Job ID
        required: true
        schema:
          type: number
      - name: maintenanceJobs_blockAssets
        in: query
        description: Maintenance Job Block
        required: true
        schema:
          type: boolean
    post:
      tags:
        - maintenanceJobs
      summary: Change Block
      description: |
        Change the block status of a maintenance job  
        Requires Instance Permission 79 (Make job block asset assignments)
      operationId: changeBlock
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
  /maintenance/job/changeDueDate.php:
    parameters:
      - name: maintenanceJobs_id
        in: query
        description: Maintenance Job ID
        required: true
        schema:
          type: number
      - name: maintenanceJobs_timestamp_due
        in: query
        description: Maintenance Job Due Date
        required: true
        schema:
          type: string
    post:
      tags:
        - maintenanceJobs
      summary: Change Due Date
      description: |
        Change the due date of a maintenance job  
        Requires Instance Permission 67 (Change Due Date)
      operationId: changeDueDate
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
  /maintenance/job/changeJobAssigned.php:
    parameters:
      - name: maintenanceJobs_id
        in: query
        description: Maintenance Job ID
        required: true
        schema:
          type: number
      - name: users_userid
        in: query
        description: Who the maintenance job is assigned to
        required: true
        schema:
          type: number
    post:
      tags:
        - maintenanceJobs
      summary: Change Job Assigned
      description: |
        Change who a maintenance job is assigned to  
        Requires Instance Permission 68 (Change Assigned To)
      operationId: changeJobAssigned
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
  /maintenance/job/changeJobStatus.php:
    parameters:
      - name: maintenanceJobs_id
        in: query
        description: Maintenance Job ID
        required: true
        schema:
          type: number
      - name: maintenanceJobsStatuses_id
        in: query
        description: Maintenance Job Status id
        required: true
        schema:
          type: number
    post:
      tags:
        - maintenanceJobs
      summary: Change Job Status
      description: |
        Change the status of a maintenance job  
        Requires Instance Permission 73 (Change Status)
      operationId: changeJobStatus
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
  /maintenance/job/changeName.php:
    parameters:
      - name: maintenanceJobs_id
        in: query
        description: Maintenance Job ID
        required: true
        schema:
          type: number
      - name: maintenanceJobs_title
        in: query
        description: Maintenance Job Name
        required: true
        schema:
          type: string
    post:
      tags:
        - maintenanceJobs
      summary: Change Name
      description: |
        Change the name of a maintenance job  
        Requires Instance Permission 70 (	Edit Job Name)
      operationId: changeName
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
  /maintenance/job/changePriority.php:
    parameters:
      - name: maintenanceJobs_id
        in: query
        description: Maintenance Job ID
        required: true
        schema:
          type: number
      - name: maintenanceJobs_priority
        in: query
        description: Maintenance Job Priority
        required: true
        schema:
          type: number
    post:
      tags:
        - maintenanceJobs
      summary: Change Priority
      description: |
        Change the priority of a maintenance job  
        Requires Instance Permission 77 (Change Priority)
      operationId: changePriority
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
  /maintenance/job/deleteJob.php:
    parameters:
      - name: maintenanceJobs_id
        in: query
        description: Maintenance Job ID
        required: true
        schema:
          type: number
    post:
      tags:
        - maintenanceJobs
      summary: Delete Job
      description: |
        Delete a maintenance job  
        Requires Instance Permission 72 (Delete Job)
      operationId: deleteJob
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
  /maintenance/job/removeAsset.php:
    parameters:
      - name: maintenanceJobs_id
        in: query
        description: Maintenance Job ID
        required: true
        schema:
          type: number
      - name: assets_id
        in: query
        description: Asset ID
        required: true
        schema:
          type: number
    post:
      tags:
        - maintenanceJobs
      summary: Remove Asset
      description: |
        Remove an asset from a maintenance job  
        Requires Instance Permission 75 (	Remove Assets from Job)
      operationId: removeAsset
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
  /maintenance/job/sendMessage.php:
    parameters:
      - name: maintenanceJobs_id
        in: query
        description: Maintenance Job ID
        required: true
        schema:
          type: number
      - name: maintenanceJobsMessages_text
        in: query
        description: Message
        required: true
        schema:
          type: string
    post:
      tags:
        - maintenanceJobs
      summary: Send Message
      description: |
        Send a message to a maintenance job  
        Requires Instance Permission 71 (Add message to job)
      operationId: sendMessage
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
  /maintenance/job/tagUser.php:
    parameters:
      - name: maintenanceJobs_id
        in: query
        description: Maintenance Job ID
        required: true
        schema:
          type: number
      - name: users_userid
        in: query
        description: User ID
        required: true
        schema:
          type: number
    post:
      tags:
        - maintenanceJobs
      summary: Tag User
      description: |
        Tag a user to a maintenance job  
        Requires Instance Permission 69 (Edit users tagged in job)
      operationId: tagUser
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
  /maintenance/job/unTagUser.php:
    parameters:
      - name: maintenanceJobs_id
        in: query
        description: Maintenance Job ID
        required: true
        schema:
          type: number
      - name: users_userid
        in: query
        description: User ID
        required: true
        schema:
          type: number
    post:
      tags:
        - maintenanceJobs
      summary: Untag User
      description: |
        Untag a user from a maintenance job  
        Requires Instance Permission 69 (Edit users tagged in job)
      operationId: untagUser
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
  /maintenance/newJob.php:
    parameters:
      - name: formData
        in: query
        description: Form Data
        required: true
        schema:
          type: object
          properties:
            maintenanceJobs_title:
              type: string
              description: Title
            maintenanceJobs_faultDescription:
              type: string
              description: Description
            maintenanceJobs_priority:
              type: number
              description: Priority
            maintenanceJobs_status:
              type: number
              description: Status
            maintenanceJobs_assets:
              type: json
            maintenanceJobs_timestamp_due:
              type: timestamp
            maintenanceJobs_user_tagged:
              type: number
            maintenanceJobs_user_creator:
              type: number
            maintenanceJobs_flagAssets:
              type: boolean
            maintenanceJobs_blockAssets:
              type: boolean
    post:
      tags:
        - maintenance
      summary: New Job
      description: |
        Create a new maintenance job  
        Requires Instance Permission 18 (Create new Asset Type)
      operationId: newJob
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
  /maintenance/searchAsset.php:
    parameters:
      - name: maintenanceJobs_id
        in: query
        description: Maintenance Job ID
        required: true
        schema:
          type: number
      - name: term
        in: query
        description: Search Term
        required: true
        schema:
          type: string
    post:
      tags:
        - maintenance
      summary: Search Asset
      description: Search for an asset to add to a maintenance job
      operationId: searchAsset
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: Array of Assets
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
  /maintenance/searchUser.php:
    parameters:
      - name: term
        in: query
        description: Search Term
        required: true
        schema:
          type: string
    post:
      tags:
        - maintenance
      summary: Search User
      description: Search for a user to tag to a maintenance job
      operationId: searchUser
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: Array of Users
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
  /manufacturer/new.php:
    parameters:
      - name: manufacturers_name
        in: query
        description: Manufacturer Name
        required: true
        schema:
          type: string
    post:
      tags:
        - manufacturers
      summary: New Manufacturer
      description: |
        Create a new manufacturer  
        Requires Instance Permission 38 (Create new Manufacturer)
      operationId: newManufacturer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
              examples:
                Success:
                  value:
                    result: true
                    response: { manufacturers_id: 1 }

        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
              examples:
                CreateFail:
                  value:
                    result: false
                    error:
                      {
                        "code": "CREATE-CLIENT-FAIL",
                        "message": "Could not create new manufacturers",
                      }
  /manufacturer/search.php:
    parameters:
      - name: term
        in: query
        description: Search Term
        required: true
        schema:
          type: string
      - name: instance_id
        in: query
        description: Instance ID
        required: false
        schema:
          type: number
    post:
      tags:
        - manufacturers
      summary: Search Manufacturers
      description: Search for a manufacturer
      operationId: searchManufacturers
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: Array of Manufacturers
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
  /modules/steps/edit.php:
    parameters:
      - name: formData
        in: query
        description: Form Data
        required: true
        schema:
          type: object
          properties:
            modulessteps_id:
              type: number
              description: Step ID
            modulesSteps_name:
              type: string
              description: Step Name
            modulesSteps_content:
              type: string
              description: Step Content
            modules_steps_order:
              type: number
              description: Step Order
            modules_id:
              type: number
              description: Module ID
            modulesSteps_internalNotes:
              type: string
              description: Internal Notes
            modulesSteps_show:
              type: boolean
    post:
      tags:
        - module_steps
      summary: Edit Step
      description: |
        Edit a module step  
        Requires Instance Permission 116 (Edit Training modules)
      operationId: editStep
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
  /modules/steps/new.php:
    parameters:
      - name: formData
        in: query
        description: Form Data
        required: true
        schema:
          type: object
          properties:
            modulesSteps_name:
              type: string
              description: Step Name
            modulesSteps_content:
              type: string
              description: Step Content
            modules_steps_order:
              type: number
              description: Step Order
            modules_id:
              type: number
              description: Module ID
            modulesSteps_internalNotes:
              type: string
              description: Internal Notes
            modulesSteps_show:
              type: boolean
    post:
      tags:
        - module_steps
      summary: New Step
      description: |
        Create a new module step  
        Requires Instance Permission 116 (Edit Training modules)
      operationId: newStep
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
  /modules/steps/sortRank.php:
    parameters:
      - name: order
        in: query
        description: Order
        required: true
        schema:
          type: array
          items:
            type: number
    post:
      tags:
        - module_steps
      summary: Sort Steps
      description: |
        Sort the steps of a module  
        Requires Instance Permission 116 (Edit Training modules)
      operationId: sortSteps
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
  /modules/edit.php:
    parameters:
      - name: formData
        in: query
        required: true
        schema:
          type: object
          properties:
            modules_id:
              type: number
              description: Module ID
            modules_name:
              type: string
              description: Module Name
            modules_description:
              type: string
              description: Module Description
            modules_learningObjectives:
              type: string
              description: LOs
            modules_show:
              type: boolean
            modules_thumbnail:
              type: number
              description: Thumbnail ID
            modules_type:
              type: number
    post:
      tags:
        - modules
      summary: Edit Module
      description: |
        Edit a module  
        Requires Instance Permission 116 (Edit Training modules)
      operationId: editModule
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
  /modules/new.php:
    parameters:
      - name: formData
        in: query
        required: true
        schema:
          type: object
          properties:
            modules_name:
              type: string
              description: Module Name
            modules_description:
              type: string
              description: Module Description
            modules_learningObjectives:
              type: string
              description: LOs
            modules_show:
              type: boolean
            modules_thumbnail:
              type: number
              description: Thumbnail ID
            modules_type:
              type: number
    post:
      tags:
        - modules
      summary: New Module
      description: |
        Create a new module  
        Requires Instance Permission 115 (Create Training modules)
      operationId: newModule
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
  /notifications/email/email.php:
    get:
      tags:
        - notifications
      summary: Email Notifications
      description: Send an email to the user. This returns a function to call rather than a response.
      operationId: emailNotifications
  /notifications/main.php:
    get:
      tags:
        - notifications
      summary: Notify function
      description: |
        This function is called by the notify function in the client-side code.  
        It returns a function to call rather than a response.
