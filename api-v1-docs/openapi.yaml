openapi: 3.0.0
servers:
  - url: https://dash.adam-rms.com/api/
    description: Production
info:
  description: |
    AdamRMS is a free, open source advanced Rental Management System for Theatre, AV & Broadcast.
    This is the API listing for the v1 API, which is currently in Production and active development.
    You can find out more about AdamRMS at [https://adam-rms.com](https://adam-rms.com).
  version: 1.0.0
  title: AdamRMS API
  termsOfService: https://adam-rms.com/legal
  contact:
    name: AdamRMS Support
    email: support@adam-rms.com
    url: https://github.com/adam-rms
  x-logo:
    url: https://cdn.adam-rms.com/img/logo.png
    altText: AdamRMS Logo
  license:
    name: GNU Affero General Public License v3.0
    url: https://github.com/adam-rms/adam-rms/blob/main/LICENSE
externalDocs:
  description: AdamRMS Documentation
  url: https://adam-rms.com
tags:
  - name: authentication
    description: Endpoints for logging into the platform
  - name: account
    description: User account management
  - name: permissions
    description: Instance and global prmission management
  - name: assets
    description: Asset management
  - name: groups
    description: Asset Groups
  - name: maintenance
    description: Asset Maintenance
  - name: manufacturers
    description: Asset Manufacturers
  - name: barcodes
    description: Asset Barcodes
  - name: categories
    description: Asset Categories
  - name: projects
    description: Project Management
  - name: crew
    description: Project Crew Management
  - name: recruitment
    description: Project Crew Recruitment
  - name: project_assets
    x-displayName: Project Assets
    description: Project Asset Management
  - name: businesses
    description: Business Management
  - name: locations
    description: Business Locations
  - name: clients
    description: Client Management
  - name: training
    description: Training Management
  - name: training_modules
    x-displayName: Training Modules
    description: Training Module Management
  - name: cms
    x-displayName: CMS Pages
    description: CMS Page Management
  - name: file_uploads
    x-displayName: File Uploads
    description: Handles interaction with s3 Buckets
  - name: notifications
    description: v1 internal api endpoints
x-tagGroups:
  - name: Users
    tags:
      - authentication
      - account
      - permissions
  - name: Assets
    tags:
      - assets
      - barcodes
      - categories
      - groups
      - maintenance
      - manufacturers
  - name: Projects
    tags:
      - projects
      - crew
      - recruitment
      - project_assets
  - name: Businesses
    tags:
      - businesses
      - locations
      - clients
  - name: Training
    tags:
      - training
      - training_modules
  - name: CMS Pages
    tags:
      - cms
  - name: Files
    tags:
      - file_uploads
  - name: Notifications
    tags:
      - notifications
paths:
  /assets/archive.php:
    parameters:
      - name: assets_id
        in: query
        description: The ID of the asset to archive
        required: true
        schema:
          type: integer
      - name: reason
        in: query
        description: The reason for archiving the asset
        required: false
        schema:
          type: string
      - name: date
        in: query
        description: The date the asset was archived, usually today
        required: false
        schema:
          type: string
          format: date
    post:
      tags:
        - assets
      summary: Archive an Asset
      description: |
        Archives an asset  
        Requires Instance Permission 97 (Archive Asset)
      operationId: archiveAsset
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  message:
                    type: null
                    description: an empty array
                example:
                  result: true
                  message: []
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
                example:
                  result: false
                  error:
                    { code: "ARCHIVE-FAIL", message: "Could not archive asset" }
  /assets/deepSearch.php:
    parameters:
      - name: projectid
        in: query
        description: a project_id to check if assets are available for
        required: false
        schema:
          type: integer
      - name: public
        in: query
        description: Determines what asset listing should be returns
        required: false
        schema:
          type: boolean
      - name: dates
        in: query
        description: Two dates to check availability between, separated with a -
        required: false
        schema:
          type: string
      - name: instance_id
        in: query
        description: the instance to search in
        required: true
        schema:
          type: integer
      - name: page
        in: query
        description: The page of results to return
        required: true
        schema:
          type: integer
      - name: page_limit
        in: query
        description: The number of results to return per page
        required: true
        schema:
          type: number
      - name: sort
        in: query
        description: How to sort the results
        required: true
        schema:
          type: string
      - name: category
        in: query
        description: The Asset Category to filter by
        required: false
        schema:
          type: string
      - name: keyword
        in: query
        description: A keyword to search for
        required: false
        schema:
          type: string
      - name: manufacturer
        in: query
        description: A manufacturer to filter by
        required: false
        schema:
          type: string
      - name: group
        in: query
        description: An Asset Group to filter by
        required: false
        schema:
          type: string
      - name: showlinked
        in: query
        description: Whether to include linked assets
        required: false
        schema:
          type: integer
      - name: showarchived
        in: query
        description: Whether to include archived assets
        required: false
        schema:
          type: integer
      - name: tags
        in: query
        description: Asset Tag(s) to search for
        required: false
        schema:
          type: string
      - name: html
        in: query
        description: Whether to return a HTML card listing or JSON data
        required: false
        schema:
          type: string
    post:
      tags:
        - assets
      summary: Search for Assets
      description: Performs a deep search for assets
      operationId: searchAssets
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: Array
                    description: Array of asset data
            application/html:
              schema:
                type: object
                description: HTML code for the asset listing
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
                    properties:
                      PUBLIC:
                        type: boolean
                      AUTH:
                        type: object
                      html:
                        type: html
                        description: HTML code for the asset listing
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
                example:
                  result: false
                  error: { message: "Error loading results" }
  /assets/delete.php:
    parameters:
      - name: assets_id
        in: query
        description: The ID of the asset to delete
        required: true
        schema:
          type: integer
    post:
      tags:
        - assets
      summary: Delete an Asset
      description: |
        Deletes an asset  
        Requires Instance Permission 19 (Delete Asset)
      operationId: deleteAsset
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  message:
                    type: null
                    description: an empty array
                example:
                  result: true
                  message: []
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
                example:
                  result: false
                  error:
                    { code: "DELETE-FAIL", message: "Could not delete asset" }
  /assets/editAsset.php:
    parameters:
      - name: formData
        in: query
        description: The data to update the asset with
        required: true
        schema:
          type: object
          properties:
            assets_id:
              type: integer
              description: The ID of the asset to update
            assets_value:
              type: number
              description: The value of the asset
            assets_dayRate:
              type: number
              description: The day rate of the asset
            assets_weekRate:
              type: number
              description: The week rate of the asset
            assets_tag:
              type: string
              description: The tag of the asset
            assets_mass:
              type: number
              description: The weight of the asset
            assets_linkedTo:
              type: integer
              description: The ID of the asset this asset is linked to
            assetTypes_id:
              type: integer
              description: The ID of the asset type
            assets_notes:
              type: string
            asset_definableFields_1:
              type: string
            asset_definableFields_2:
              type: string
            asset_definableFields_3:
              type: string
            asset_definableFields_4:
              type: string
            asset_definableFields_5:
              type: string
            asset_definableFields_6:
              type: string
            asset_definableFields_7:
              type: string
            asset_definableFields_8:
              type: string
            asset_definableFields_9:
              type: string
            asset_definableFields_10:
              type: string
    post:
      tags:
        - assets
      summary: Edit an Asset
      description: |
        Edits an asset's data  
        Requires Instance Permission 59 (Edit Asset)
      operationId: editAsset
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  message:
                    type: null
                    description: an empty array
                example:
                  result: true
                  message: []
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                UpdateFail:
                  value:
                    result: false
                    error:
                      { code: "UPDATE-FAIL", message: "Could not update asset" }
                ParamError:
                  value:
                    result: false
                    error:
                      { code: "PARAM-ERROR", message: "No data for action" }
  /assets/editAssetType.php:
    parameters:
      - name: formData
        in: query
        description: The data to update the asset type with
        required: true
        schema:
          type: object
          properties:
            assetTypes_id:
              type: integer
              description: The ID of the asset type to update
            assetTypes_name:
              type: string
              description: The name of the asset type
            assetCategories_id:
              type: integer
              description: The ID of the asset category
            assetTypes_productLink:
              type: string
              description: Link to the website of the asset type
            manufacturers_id:
              type: integer
              description: The ID of the manufacturer
            assetTypes_description:
              type: string
              description: The description of the asset type
            assetTypes_definableFields:
              type: string
              description: A comma-separated list of 10 definable field names
            assetTypes_mass:
              type: number
              description: The weight of the asset type
            assetTypes_inserted:
              type: string
              description: The date the asset type was inserted
            assetTypes_value:
              type: string
              description: The value of the asset type
            assetTypes_dayRate:
              type: number
              description: The day rate of the asset type
            assetTypes_weekRate:
              type: number
              description: The week rate of the asset type
    post:
      tags:
        - assets
      summary: Edit an Asset Type
      description: |
        Edits an asset type's data  
        Requires Instance Permission 58 (Edit Asset Type)
      operationId: editAssetType
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: null
                    description: an empty array
                example:
                  result: true
                  response: []
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                UpdateFail:
                  value:
                    result: false
                    error:
                      {
                        code: "UPDATE-FAIL",
                        message: "Could not update asset type",
                      }
                ParamError:
                  value:
                    result: false
                    error:
                      { code: "PARAM-ERROR", message: "No data for action" }
  /assets/editAssetTypeDefinableFields.php:
    parameters:
      - name: formData
        in: query
        description: The data to update the asset type's definable fields with
        required: true
        schema:
          type: object
          properties:
            assetTypes_id:
              type: integer
              description: The ID of the asset type to update
            assetTypes_definableFields_1:
              type: string
            assetTypes_definableFields_2:
              type: string
            assetTypes_definableFields_3:
              type: string
            assetTypes_definableFields_4:
              type: string
            assetTypes_definableFields_5:
              type: string
            assetTypes_definableFields_6:
              type: string
            assetTypes_definableFields_7:
              type: string
            assetTypes_definableFields_8:
              type: string
            assetTypes_definableFields_9:
              type: string
            assetTypes_definableFields_10:
              type: string
    post:
      tags:
        - assets
      summary: Edit an Asset Type's Definable Fields
      description: |
        Edits an asset type's definable fields  
        Requires Instance Permission 58 (Edit Asset Type)
      operationId: editAssetTypeDefinableFields
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  message:
                    type: null
                    description: an empty array
                example:
                  result: true
                  message: []
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                UpdateFail:
                  value:
                    result: false
                    error:
                      {
                        code: "UPDATE-FAIL",
                        message: "Could not update asset type",
                      }
                ParamError:
                  value:
                    result: false
                    error:
                      { code: "PARAM-ERROR", message: "No data for action" }
  /assets/export.php:
    parameters:
      - name: csv
        in: query
        description: Whether to export as a CSV file
        required: false
        schema:
          type: any
      - name: xlsx
        in: query
        description: Whether to export as an XLSX file
        required: false
        schema:
          type: any
    post:
      tags:
        - assets
      summary: Export Assets
      description: |
        Exports assets
      operationId: exportAssets
      responses:
        200:
          description: Success
          content:
            application/csv:
              schema:
                type: string
                format: binary
                description: The CSV file
            application/xlsx:
              schema:
                type: string
                format: binary
                description: The XLSX file
        404:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: 404
  /assets/getAssetTypeData.php:
    parameters:
      - name: term
        in: query
        description: The ID of the asset type to get data for
        required: true
        schema:
          type: integer
    post:
      tags:
        - assets
      summary: Get Asset Type Data
      description: |
        Gets data for an asset type
      operationId: getAssetTypeData
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  assetType:
                    type: object
                    description: An object containing the asset type's data
                    properties:
                      assetTypes_id:
                        type: integer
                        description: The ID of the asset type
                      assetTypes_name:
                        type: string
                        description: The name of the asset type
                      assetCategories_id:
                        type: integer
                        description: The ID of the asset category
                      assetTypes_productLink:
                        type: string
                        description: Link to the website of the asset type
                      manufacturers_id:
                        type: integer
                        description: The ID of the manufacturer
                      assetTypes_description:
                        type: string
                        description: The description of the asset type
                      assetTypes_definableFields:
                        type: string
                        description: A comma-separated list of 10 definable field names
                      assetTypes_mass:
                        type: number
                        description: The weight of the asset type
                      assetTypes_inserted:
                        type: string
                        description: The date the asset type was inserted
                      assetTypes_value:
                        type: string
                        description: The value of the asset type
                      assetTypes_dayRate:
                        type: number
                        description: The day rate of the asset type
                      assetTypes_weekRate:
                        type: number
                        description: The week rate of the asset type
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                AssetTypeNotFound:
                  value:
                    result: false
                    error: { code: "AUTH-ERROR", message: "No auth for action" }
                ListError:
                  value:
                    result: false
                    error:
                      {
                        code: "LIST-ASSETTYPES-FAIL",
                        message: "Could not find asset",
                      }
  /assets/list.php:
    parameters:
      - name: term
        in: query
        description: A search term to filter the list by
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: The page number to get
        required: false
        schema:
          type: integer
      - name: pageLimit
        in: query
        description: The number of items to get per page
        required: false
        schema:
          type: integer
      - name: category
        in: query
        description: The ID of the asset category to filter by
        required: false
        schema:
          type: integer
      - name: manufacturer
        in: query
        description: The ID of the manufacturer to filter by
        required: false
        schema:
          type: integer
      - name: assetTypes_id
        in: query
        description: The ID of the asset type to filter by
        required: false
        schema:
          type: integer
      - name: all
        in: query
        description: Whether to get all linked assets
        required: false
        schema:
          type: any
      - name: abridgedList
        in: query
        description: Whether to get file and flags & blocks
        required: false
        schema:
          type: boolean
    post:
      tags:
        - assets
      summary: List Assets
      description: |
        Lists assets
      operationId: listAssets
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  assets:
                    type: array
                    description: An array of asset objects
                    items:
                      type: object
                      properties:
                        assets_id:
                          type: integer
                          description: The ID of the asset
                        assets_name:
                          type: string
                          description: The name of the asset
                        assetTypes_id:
                          type: integer
                          description: The ID of the asset type
                        assetTypes_name:
                          type: string
                          description: The name of the asset type
                        assetCategories_id:
                          type: integer
                          description: The ID of the asset category
                        assetCategories_name:
                          type: string
                          description: The name of the asset category
                        manufacturers_id:
                          type: integer
                          description: The ID of the manufacturer
                        manufacturers_name:
                          type: string
                          description: The name of the manufacturer
                        assets_description:
                          type: string
                          description: The description of the asset
                        assets_serialNumber:
                          type: string
                          description: The serial number of the asset
                        assets_barcode:
                          type: string
                          description: The barcode of the asset
                        assets_value:
                          type: string
                          description: The value of the asset
                        assets_dayRate:
                          type: number
                          description: The day rate of the asset
                        assets_weekRate:
                          type: number
                          description: The week rate of the asset
                        assets_monthRate:
                          type: number
                          description: The month rate of the asset
                        assets_yearRate:
                          type: number
                          description: The year rate of the asset
                        assets_mass:
                          type: number
                          description: The weight of the asset
                        assets_productLink:
                          type: string
                          description: Link to the website of the asset
                        assets_inserted:
                          type: string
                          description: The date the asset was inserted
                        assets_updated:
                          type: string
                          description: The date the asset was last updated
                        assets_deleted:
                          type: string
                          description: The date the asset was deleted
                        assets_status:
                          type: string
                          description: The status of the asset
                        assets_flags:
                          type: string#
                  pagination:
                    type: number
                    description: An object containing pagination data
  /assets/newAssetFromType.php:
    parameters:
      - name: formData
        in: query
        description: The data to create the asset from
        required: true
        schema:
          type: object
          properties:
            assetTypes_id:
              type: integer
              description: The ID of the asset type
              required: true
            assets_tag:
              type: string
              description: The tag of the asset
            assets_notes:
              type: string
            assets_assetGroups:
              type: string
            asset_definableFields_1:
              type: string
            asset_definableFields_2:
              type: string
            asset_definableFields_3:
              type: string
            asset_definableFields_4:
              type: string
            asset_definableFields_5:
              type: string
            asset_definableFields_6:
              type: string
            asset_definableFields_7:
              type: string
            asset_definableFields_8:
              type: string
            asset_definableFields_9:
              type: string
            asset_definableFields_10:
              type: string
    post:
      tags:
        - assets
      summary: Create Asset From Type
      description: |
        Creates an asset from an asset type
        Requires Instance Permission 17 (Create Asset)
      operationId: createAssetFromType
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
                    properties:
                      assets_id:
                        type: integer
                        description: The ID of the asset
                      assets_tag:
                        type: string
                        description: The tag of the asset
                      assetTypes_id:
                        type: integer
                        description: The ID of the asset type
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        description: The error code
                      error:
                        type: array
                        description: An Array containing an error code and a message
              examples:
                TypeFail:
                  value:
                    result: false
                    error:
                      {
                        code: "LIST-ASSETTYPES-FAIL",
                        message: "Could not find asset type",
                      }
                InsertFail:
                  value:
                    result: false
                    error:
                      { code: "INSERT-FAIL", message: "Could not insert asset" }
                ParamError:
                  value:
                    result: false
                    error:
                      { code: "PARAM-ERROR", message: "No data for action" }
  /assets/newAssetType.php:
    parameters:
      - name: formData
        in: query
        description: The data to create the asset type from
        required: true
        schema:
          type: object
          properties:
            assetTypes_name:
              type: string
              description: The name of the asset type
              required: true
            assetTypes_description:
              type: string
              description: The description of the asset type
            assetCategories_id:
              type: integer
              description: The ID of the asset category
            manufacturers_id:
              type: integer
              description: The ID of the manufacturer
            assetTypes_productLink:
              type: string
              description: Link to the website of the asset type
            assetTypes_definableFields_1:
              type: string
              description: The first definable field
            assetTypes_definableFields_2:
              type: string
              description: The second definable field
            assetTypes_definableFields_3:
              type: string
              description: The third definable field
            assetTypes_definableFields_4:
              type: string
              description: The fourth definable field
            assetTypes_definableFields_5:
              type: string
              description: The fifth definable field
            assetTypes_definableFields_6:
              type: string
              description: The sixth definable field
            assetTypes_definableFields_7:
              type: string
              description: The seventh definable field
            assetTypes_definableFields_8:
              type: string
              description: The eighth definable field
            assetTypes_definableFields_9:
              type: string
              description: The ninth definable field
            assetTypes_definableFields_10:
              type: string
              description: The tenth definable field
            assetTypes_mass:
              type: number
              description: The weight of the asset type
            assetTypes_inserted:
              type: string
              description: The date the asset type was inserted
            assetTypes_dayRate:
              type: number
              description: The day rate of the asset type
            assetTypes_weekRate:
              type: number
              description: The week rate of the asset type
            assetTypes_value:
              type: number
              description: The value of the asset type
    post:
      tags:
        - assets
      summary: Create Asset Type
      description: |
        Creates an asset type  
        Requires Instance Permission 18 (Create Asset Type)
      operationId: createAssetType
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
                    properties:
                      assetTypes_id:
                        type: integer
                        description: The ID of the asset type
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        description: The error code
                      error:
                        type: array
                        description: An Array containing an error code and a message
              examples:
                InsertFail:
                  value:
                    result: false
                    error:
                      {
                        code: "INSERT-FAIL",
                        message: "Could not insert asset type",
                      }
                ParamError:
                  value:
                    result: false
                    error:
                      { code: "PARAM-ERROR", message: "No data for action" }
  /assets/searchAssets.php:
    parameters:
      - name: term
        in: query
        description: The term to search for
        required: false
        schema:
          type: string
    post:
      tags:
        - assets
      summary: Simple Asset Search
      description: |
        Searches for assets by tag or name  
        Deprecated, use /assets/deepSearch.php instead
      deprecated: true
      operationId: simpleAssetSearch
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: An array of assets
                    items:
                      type: object
                      properties:
                        tag:
                          type: string
                          description: The tag of the asset
                        assets_id:
                          type: integer
                          description: The ID of the asset
                        assets_tag:
                          type: string
                          description: The tag of the asset
                        assetTypes_name:
                          type: string
                          description: The name of the asset type
                        assetTypes_id:
                          type: integer
                          description: The ID of the asset type
                        assetCategories_name:
                          type: string
                          description: The name of the asset category
                        assetCategoriesGroups_name:
                          type: string
                          description: The name of the asset category group
                        manufacturers_name:
                          type: string
                          description: The name of the manufacturer
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                AssetsFail:
                  value:
                    result: false
                    error:
                      { code: "LIST-ASSETS-FAIL", message: "Could not search" }
  /assets/searchAssetsBarcode.php:
    get:
      tags:
        - assets
      summary: Search Assets by Barcode
      description: |
        Redirects to assets/barcodes/search.php
      operationId: searchAssetsBarcode
      deprecated: true
      responses:
        308:
          description: Redirect
  assets/searchType.php:
    parameters:
      - name: term
        in: query
        description: The term to search for
        required: false
        schema:
          type: string
      - name: manufacturer
        in: query
        description: The manufacturer to search for
        required: false
        schema:
          type: string
    post:
      tags:
        - assets
      summary: Asset Type Search
      description: |
        Searches for asset types by name or manufacturer
      operationId: assetTypeSearch
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: list of assets
                    items:
                      type: object
                      properties:
                        assetTypes_name:
                          type: string
                          description: The name of the asset type
                        assetTypes_id:
                          type: integer
                          description: The ID of the asset type
                        assetCategories_name:
                          type: string
                          description: The name of the asset category
                        assetCategoriesGroups_name:
                          type: string
                          description: The name of the asset category group
                        manufacturers_name:
                          type: string
                          description: The name of the manufacturer
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                AssetTypeFail:
                  value:
                    result: false
                    error:
                      {
                        code: "LIST-ASSETTYPES-FAIL",
                        message: "Could not search",
                      }
  /assets/substitutions.php:
    parameters:
      - name: assetsAssignments_id
        in: query
        description: The ID of the asset assignment
        required: true
        schema:
          type: integer
    post:
      tags:
        - assets
      summary: Get Swappable Assets
      description: |
        Gets a list of assets that can be swapped with the given asset assignment
      operationId: getSwappableAssets
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: An array of assets
                    items:
                      type: object
                      properties:
                        assets_id:
                          type: integer
                          description: The ID of the asset
                        assets_tag:
                          type: string
                          description: The tag of the asset
                        asset_definableFields_1:
                          type: string
                          description: The First Definable field value, usually for length
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                NoAssets:
                  value:
                    result: true
                    error: { code: "NO-ASSETS", message: "No Assets Available" }
                NoAsset:
                  value:
                    result: false
                    error: { code: "", message: "No Asset Found" }
  /assets/barcodes/assign.php:
    parameters:
      - name: tag
        in: query
        description: The tag of the Asset to assign a barcode to
        required: true
        schema:
          type: string
      - name: barcodeid
        in: query
        description: An ID of an existing barcode or false
        required: true
        schema:
          oneOf:
            - type: number
            - type: boolean
      - name: text
        in: query
        description: the value of a new barcode
        required: false
        schema:
          type: string
      - name: type
        in: query
        description: The Barcode type
        required: false
        schema:
          type: string
    post:
      tags:
        - barcodes
      summary: Assign Barcode
      description: |
        Assign a barcode to an asset  
        Requires Instance Permission 88 (Associate barcodes with an Asset)
      operationId: assignBarcode
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
                    properties:
                      type: object
                      properties:
                        assets_id:
                          type: integer
                          description: The ID of the asset
                        assetTypes_id:
                          type: string
                          description: The tag of the asset
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                ParamError:
                  value:
                    result: false
                    error: { code: "PARAM-ERROR", message: "No data for action" }
                InsertError:
                  value:
                    result: false
                    error: { code: "", message: "Barcode insert error" }  
                UpdateError:
                  value:
                    result: false
                    error: { code: "UPDATE-FAIL", message: "Could not update barcode"}
  /assets/barcodes/delete.php:
    parameters:
      - name: barcodes_id
        in: query
        description: the ID to remove
        required: true
        schema:
          type: integer
    post:
      tags:
        - barcodes
      summary: Delete Barcode
      description: |
        Delete a barcode  
        Requires Instance Permission 86 (Delete Barcode)
      operationId: deleteBarcode
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                ParamError:
                  value:
                    result: false
                    error: { code: "PARAM-ERROR", message: "No data for action" }
                DeleteFail:
                  value:
                    result: false
                    error: { code: "DELETE-FAIL", message: "Could not delete barcode"}
  /assets/barcodes/index.php:
    parameters:
      - name: type
        in: query
        description: The Barcode type
        required: false
        schema: 
          type: string
      - name: barcode
        in: query
        description: Value of the Barcode
        required: true
        schema:
          type: string
      - name: size
        in: query
        description: Size of returned barcode
        required: false
        schema:
          type: number
      - name: width
        in: query
        description: Width of the returned barcode
        required: false
        schema:
          type: number
    post:
      tags:
        - barcodes
      summary: Generate Barcode Image
      description: |
        Generate an image of a given barcode value
      operationId: generateBarcode
      responses:
        200:
          description: Barcode Image
          content:
            application/png:
              schema:
                type: string
                format: binary
                description: Image of a barcode
  /assets/barcodes/search.php:
    parameters:
      - name: text
        in: query
        description: The barcode value
        required: true
        schema:
          type: string
      - name: type
        in: query
        description: The barcode type
        required: true
        schema:
          type: string
      - name: locationType
        in: query
        description: What the location is
        required: false
        schema:
          type: string
    post:
      tags:
        - barcodes
      summary: Barcode Asset Search
      description: |
        Search for an Asset using a barcode
      operationId: barcodeSearch
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
                    properties:
                      asset:
                        type: object
                        description: Matching asset
                      assetSuggest:
                        type: object
                        description: Suggested Assets
                      barcode:
                        type: string
                        description: Scanned barcode
                      location: 
                        type: object
                        description: Matching location
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                ParamError:
                  value:
                    result: true
                    error: { }
  /barcodes/searchAsset.php:
    parameters:
      - name: term
        in: query
        description: the barcode/tag to search for
        required: true 
        schema:
          type: string
    post: 
      tags:
        - barcodes
      summary: Search by Barcode
      description: |
        A simpler barcode search
      operationId: barcodeSearch
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: List of 15 assets
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                ParamError:
                  value:
                    result: false
                    error: { code: "AUTH-ERROR", message: "No auth for action" }
                AssetsFail:
                  value:
                    result: false
                    error: { code: "LIST-ASSETS-FAIL", message: "Could not search for assets"}
  /categories/edit.php:
    parameters:
      - name: formData
        in: query
        description: The category data
        required: true
        schema:
          type: object
          properties:
            assetCategories_id:
              type: integer
              description: The ID of the category
              required: true
            assetCategories_name:
              type: string
              description: The name of the category
            assetCategories_fontAwesome:
              type: string
              description: The font awesome icon for the category
            assetCategoriesGroups_id:
              type: integer
              description: The ID of the category group
    post:
      tags:
        - categories
      summary: Edit Asset Category
      description: |
        Edit a category
      operationId: editCategory
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                ParamError:
                  value:
                    result: false
                    error: { code: "PARAM-ERROR", message: "No data for action" }
                UpdateFail:
                  value:
                    result: false
                    error: {}
  /category/new.php:
    parameters:
      - name: formData
        in: query
        description: The category data
        required: true
        schema:
          type: object
          properties:
            assetCategories_name:
              type: string
              description: The name of the category
            assetCategories_fontAwesome:
              type: string
              description: The font awesome icon for the category
            assetCategoriesGroups_id:
              type: integer
              description: The ID of the category group
    post:
      tags:
        - categories
      summary: Create Asset Category
      description: |
        Create a category
      operationId: createCategory
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                ParamError:
                  value:
                    result: object
                    error: { code: "PARAM-ERROR", message: "No data for action" }
                InsertFail:
                  value:
                    result: false
                    error: {}
  /categories/search.php:
    parameters:
      - name: term
        in: query
        description: The search term
        required: true
        schema:
          type: string
      - name: instance_id
        in: query
        description: the InstanceID
        required: false
        schema:
          type: integer
    post:
      tags:
        - categories
      summary: Search Asset Categories
      description: |
        Search for categories
      operationId: searchCategories
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A list of categories
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: An Array containing an error code and a message
              examples:
                ParamError:
                  value:
                    result: false
                    error: {}
  /clients/edit.php:
    parameters:
      - name: formData
        in: query
        description: The client data
        required: true
        schema:
          type: object
          properties:
            clients_id:
              type: integer
              description: The ID of the client
              required: true
            clients_name:
              type: string
              description: The name of the client
            clients_address:
              type: string
              description: The address of the client
            clients_phone:
              type: string
              description: The phone number of the client
            clients_email:
              type: string
              description: The email of the client
            clients_website:
              type: string
              description: The website of the client
            clients_notes:
              type: string
              description: The notes of the client
    post:
      tags:
        - clients
      summary: Edit Client
      description: |
        Edit a client  
        Requires Instance Permission 39 (Edit Clients)
      operationId: editClient
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                ParamError:
                  value:
                    result: false
                    error: { code: "PARAM-ERROR", message: "No data for action" }
                UpdateFail:
                  value:
                    result: false
                    error: {}
  /clients/new.php:
    parameters:
      - name: clients_name
        in: query
        description: The name of the client
        required: true
        schema:
          type: string
    post:
      tags:
        - clients
      summary: Create Client
      description: |
        Create a client  
        Requires Instance Permission 37 (Create Clients)
      operationId: createClient
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
                    description: Object containing the clients_id
              examples:
                Success:
                  value:
                    result: true
                    response:
                      clients_id: 1
        400:
          description: Error
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                InsertFail:
                  value:
                    result: false
                    error: { code: "CREATE-CLIENT-FAIL", message: "Could not create new client" }
  /cms/editPageConfig.php:
    parameters:
      - name: formData
        in: query
        description: The page config data
        required: true
        schema:
          type: object
    post:
      tags:
        - cms
      summary: Edit CMS Page Config
      description: |
        Edit a page config  
        Requires Instance Permission 126 (Edit Page Config)
      operationId: editPageConfig
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        404:
          description: Error
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                UpdateFail:
                  value:
                    result: false
                    error: {}
  /cms/editPageContent-rollback.php:
    parameters:
      - name: cmsPages_id
        in: query
        description: The ID of the page
        required: true
        schema:
          type: integer
      - name: change
        in: query
        description: The description of the change
        required: true
        schema:
          type: string
    post:
      tags:
        - cms
      summary: Rollback CMS Page Content
      description: |
        Rollback a page content  
        Requires Instance Permission 126 (Edit Page Content)
      operationId: rollbackPageContent
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        404:
          description: Error
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                UpdateFail:
                  value:
                    result: false
                    error: {}
  /cms/editPageContent.php:
    parameters:
      - name: cmsPages_id
        in: query
        description: The ID of the page
        required: true
        schema:
          type: integer
      - name: pageData
        in: query
        description: The page data
        required: true
        schema:
          type: string
      - name: changelog
        in: query
        description: The description of the change
        required: true
        schema:
          type: string
    post:
      tags:
        - cms
      summary: Edit CMS Page Content
      description: |
        Edit a page content  
        Requires Instance Permission 126 (Edit Page Content)
      operationId: editPageContent
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
                    description: Object containing the revision data and id
        404:
          description: Error
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                UpdateFail:
                  value:
                    result: false
                    error: {}
  /cms/editPageRank.php:
    parameters:
      - name: order
        in: query
        description: The page rank data
        required: true
        schema:
          type: array
    post:
      tags:
        - cms
      summary: Edit CMS Page Rank
      description: |
        Edit a page rank  
        Requires Instance Permission 126 (Edit Page Data)
      operationId: editPageRank
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        404:
          description: Error
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                UpdateFail:
                  value:
                    result: false
                    error: {}
  /cms/get.php:
    parameters:
      - name: p
        in: query
        description: The page id
        required: true
        schema:
          type: integer
    post:
      tags:
        - cms
      summary: Get CMS Page
      description: |
        Get a page  
      operationId: getPage
      responses:
        200:
          description: Success
          content:
            application/html:
              schema:
                type: object
                description: HTML code for the page content
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
                    properties:
                      PUBLIC:
                        type: boolean
                      AUTH:
                        type: object
                      html:
                        type: html
                        description: HTML code for the page content
        404:
          description: Error
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: An Array containing an error code and a message
              examples:
                GetFail:
                  value:
                    result: false
                    error: { code: "NO_PAGE", message: "Page not found" }
  /cms/list.php:
    get:
      tags:
        - cms
      summary: List CMS Pages
      description: |
        List all pages
      operationId: listPages
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: An Array containing all pages
  /cms/setCustomDashboard.php:
    parameters:
      - name: instancePositions_id
        in: query
        description: instance position for the dashboard
        required: true
        schema:
          type: number
      - name: cmsPages_id
        in: query
        description: The page id
        required: true
        schema:
          type: number
    post:
      tags:
        - cms
      summary: Set Custom Dashboard
      description: |
        Set a custom dashboard  
        Requires Instance Permission 126 (Edit Page Data)
      operationId: setCustomDashboard
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        404:
          description: Error
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: A null array
              examples:
                UpdateFail:
                  value:
                    result: false
                    error: {}
  /file/delete.php:
    parameters:
      - name: s3files_id
        in: query
        description: The file id
        required: true
        schema:
          type: integer
    post:
      tags:
        - file_uploads
      summary: Delete File
      description: |
        Delete a file  
        Requires Instance Permission 57 (Delete File)
      operationId: deleteFile
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        404:
          description: Error
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: A null array
              examples:
                DeleteFail:
                  value:
                    result: false
                    error: {}
  /file/index.php:
    parameters:
      - name: f
        in: query
        description: The file id
        required: true
        schema:
          type: integer
      - name: s
        in: query
        description: | 
          The file size  
          false to get the original, available is "tiny" (50px) "small" (100px) "medium" (500px) "large" (1000px)
        required: false
        schema:
          type: string | boolean
      - name: d
        in: query
        description: should a download be forced or should it be displayed in the browser? (if set it will download)
        required: false
        schema:
          type: boolean
      - name: r
        in: query
        description: should the url be returned by the script as plain text or a redirect triggered? (if set it will redirect)
        required: false
        schema:
          type: boolean
      - name: e
        in: query
        description: when should the link expire? Must be a string describing how long in words basically. If this file type has security features then it will default to 1 minute.
        required: false
        schema:
          type: boolean
    post:
      tags:
        - file_uploads
      summary: Get File
      description: |
        Get a file  
      operationId: getFile
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: object
                    description: Object containing the file data
        307:
          description: Success - Redirect to this address
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: object
                    description: a message
              examples:
                GetFail:
                  value:
                    result: false
                    error: {message: "File not found - please check to ensure you are still logged in"}
  /file/removeShare.php:
    parameters:
      - name: s3files_id
        in: query
        description: The file id
        required: true
        schema:
          type: integer
    post:
      tags:
        - file_uploads
      summary: Remove File Share
      description: |
        Remove a file share  
        Requires Instance Permission 127 (Manage a file's sharing status)
      operationId: removeFileShare
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        404:
          description: Error
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: A null array
              examples:
                RemoveFail:
                  value:
                    result: false
                    error: {}
  /file/rename.php:
    parameters:
      - name: s3files_id
        in: query
        description: The file id
        required: true
        schema:
          type: integer
      - name: s3files_name
        in: query
        description: The new file name
        required: true
        schema:
          type: string
    post:
      tags:
        - file_uploads
      summary: Rename File
      description: |
        Rename a file  
        Requires Instance Permission 56 (Rename File)
      operationId: renameFile
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  response:
                    type: array
                    description: A null Array
        404:
          description: Error
        "default":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    description: Whether the request was successful
                  error:
                    type: array
                    description: A null array
              examples:
                RenameFail:
                  value:
                    result: false
                    error: {}
    /file/share.php:
      parameters:
        - name: s3files_id
          in: query
          description: The file id
          required: true
          schema:
            type: integer
      post:
        tags:
          - file_uploads
        summary: Share File
        description: |
          Share a file  
          Requires Instance Permission 127 (Manage a file's sharing status)
        operationId: shareFile
        responses:
          200:
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    result:
                      type: boolean
                      description: Whether the request was successful
                    response:
                      type: array
                      description: A null Array
          404:
            description: Error
          "default":
            description: Error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    result:
                      type: boolean
                      description: Whether the request was successful
                    error:
                      type: array
                      description: A null array
                examples:
                  ShareFail:
                    value:
                      result: false
                      error: {}

